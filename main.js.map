{"version":3,"sources":["webpack://babylon-vrm-loader/webpack/universalModuleDefinition","webpack://babylon-vrm-loader/webpack/bootstrap","webpack://babylon-vrm-loader/./src/errors.ts","webpack://babylon-vrm-loader/./src/humanoid-bone.ts","webpack://babylon-vrm-loader/./src/index.ts","webpack://babylon-vrm-loader/./src/material-value-binding-merger.ts","webpack://babylon-vrm-loader/./src/secondary-animation/collider-group.ts","webpack://babylon-vrm-loader/./src/secondary-animation/collider.ts","webpack://babylon-vrm-loader/./src/secondary-animation/quaternion-helper.ts","webpack://babylon-vrm-loader/./src/secondary-animation/spring-bone-controller.ts","webpack://babylon-vrm-loader/./src/secondary-animation/vrm-spring-bone-logic.ts","webpack://babylon-vrm-loader/./src/secondary-animation/vrm-spring-bone.ts","webpack://babylon-vrm-loader/./src/test/index.ts","webpack://babylon-vrm-loader/./src/vcast-vci-material-unity.ts","webpack://babylon-vrm-loader/./src/vrm-extension.ts","webpack://babylon-vrm-loader/./src/vrm-file-loader.ts","webpack://babylon-vrm-loader/./src/vrm-interfaces.ts","webpack://babylon-vrm-loader/./src/vrm-manager.ts","webpack://babylon-vrm-loader/./src/vrm-material-generator.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylon-vrm-loader\"] = factory();\n\telse\n\t\troot[\"babylon-vrm-loader\"] = factory();\n})(window, function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpbabylon_vrm_loader\"] = window[\"webpackJsonpbabylon_vrm_loader\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/test/index.ts\",\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\r\n * Throws when mandatory bone could not find\r\n */\r\nexport class BoneNotFoundError extends Error {\r\n    public readonly name = 'BoneNotFoundError';\r\n\r\n    public constructor(public readonly boneName: string) {\r\n        super(`Bone:${boneName} NotFound`);\r\n    }\r\n}\r\n","import { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { BoneNotFoundError } from './errors';\r\n\r\ninterface TransformNodeMap {\r\n    [name: string]: TransformNode;\r\n}\r\n\r\n/**\r\n * HumanoidBone を取得するメソッド群\r\n * @see https://docs.unity3d.com/ja/2018.3/ScriptReference/HumanBodyBones.html\r\n */\r\nexport class HumanoidBone {\r\n    public constructor(private nodeMap: TransformNodeMap) {}\r\n\r\n    public dispose() {\r\n        (this.nodeMap as any) = null;\r\n    }\r\n\r\n    /**\r\n     * 尻\r\n     */\r\n    public get hips() {\r\n        return this.getMandatoryBone('hips');\r\n    }\r\n    /**\r\n     * 左太もも\r\n     */\r\n    public get leftUpperLeg() {\r\n        return this.getMandatoryBone('leftUpperLeg');\r\n    }\r\n    /**\r\n     * 右太もも\r\n     */\r\n    public get rightUpperLeg() {\r\n        return this.getMandatoryBone('rightUpperLeg');\r\n    }\r\n    /**\r\n     * 左ひざ\r\n     */\r\n    public get leftLowerLeg() {\r\n        return this.getMandatoryBone('leftLowerLeg');\r\n    }\r\n    /**\r\n     * 右ひざ\r\n     */\r\n    public get rightLowerLeg() {\r\n        return this.getMandatoryBone('rightLowerLeg');\r\n    }\r\n    /**\r\n     * 左足首\r\n     */\r\n    public get leftFoot() {\r\n        return this.getMandatoryBone('leftFoot');\r\n    }\r\n    /**\r\n     * 右足首\r\n     */\r\n    public get rightFoot() {\r\n        return this.getMandatoryBone('rightFoot');\r\n    }\r\n    /**\r\n     * 脊椎の第一\r\n     */\r\n    public get spine() {\r\n        return this.getMandatoryBone('spine');\r\n    }\r\n    /**\r\n     * 胸\r\n     */\r\n    public get chest() {\r\n        return this.getMandatoryBone('chest');\r\n    }\r\n    /**\r\n     * 首\r\n     */\r\n    public get neck() {\r\n        return this.getMandatoryBone('neck');\r\n    }\r\n    /**\r\n     * 頭\r\n     */\r\n    public get head() {\r\n        return this.getMandatoryBone('head');\r\n    }\r\n    /**\r\n     * 左肩\r\n     */\r\n    public get leftShoulder() {\r\n        return this.getMandatoryBone('leftShoulder');\r\n    }\r\n    /**\r\n     * 右肩\r\n     */\r\n    public get rightShoulder() {\r\n        return this.getMandatoryBone('rightShoulder');\r\n    }\r\n    /**\r\n     * 左上腕\r\n     */\r\n    public get leftUpperArm() {\r\n        return this.getMandatoryBone('leftUpperArm');\r\n    }\r\n    /**\r\n     * 右上腕\r\n     */\r\n    public get rightUpperArm() {\r\n        return this.getMandatoryBone('rightUpperArm');\r\n    }\r\n    /**\r\n     * 左ひじ\r\n     */\r\n    public get leftLowerArm() {\r\n        return this.getMandatoryBone('leftLowerArm');\r\n    }\r\n    /**\r\n     * 右ひじ\r\n     */\r\n    public get rightLowerArm() {\r\n        return this.getMandatoryBone('rightLowerArm');\r\n    }\r\n    /**\r\n     * 左手首\r\n     */\r\n    public get leftHand() {\r\n        return this.getMandatoryBone('leftHand');\r\n    }\r\n    /**\r\n     * 右手首\r\n     */\r\n    public get rightHand() {\r\n        return this.getMandatoryBone('rightHand');\r\n    }\r\n    /**\r\n     * 左つま先(Optional)\r\n     */\r\n    public get leftToes() {\r\n        return this.getOptionalBone('leftToes');\r\n    }\r\n    /**\r\n     * 右つま先(Optional)\r\n     */\r\n    public get rightToes() {\r\n        return this.getOptionalBone('rightToes');\r\n    }\r\n    /**\r\n     * 左目(Optional)\r\n     */\r\n    public get leftEye() {\r\n        return this.getOptionalBone('leftEye');\r\n    }\r\n    /**\r\n     * 右目(Optional)\r\n     */\r\n    public get rightEye() {\r\n        return this.getOptionalBone('rightEye');\r\n    }\r\n    /**\r\n     * 顎(Optional)\r\n     */\r\n    public get jaw() {\r\n        return this.getOptionalBone('jaw');\r\n    }\r\n    /**\r\n     * 左親指第一指骨(Optional)\r\n     */\r\n    public get leftThumbProximal() {\r\n        return this.getOptionalBone('leftThumbProximal');\r\n    }\r\n    /**\r\n     * 左親指第二指骨(Optional)\r\n     */\r\n    public get leftThumbIntermediate() {\r\n        return this.getOptionalBone('leftThumbIntermediate');\r\n    }\r\n    /**\r\n     * 左親指第三指骨(Optional)\r\n     */\r\n    public get leftThumbDistal() {\r\n        return this.getOptionalBone('leftThumbDistal');\r\n    }\r\n    /**\r\n     * 左人差し指第一指骨(Optional)\r\n     */\r\n    public get leftIndexProximal() {\r\n        return this.getOptionalBone('leftIndexProximal');\r\n    }\r\n    /**\r\n     * 左人差し指第二指骨(Optional)\r\n     */\r\n    public get leftIndexIntermediate() {\r\n        return this.getOptionalBone('leftIndexIntermediate');\r\n    }\r\n    /**\r\n     * 左人差し指第三指骨(Optional)\r\n     */\r\n    public get leftIndexDistal() {\r\n        return this.getOptionalBone('leftIndexDistal');\r\n    }\r\n    /**\r\n     * 左中指第一指骨(Optional)\r\n     */\r\n    public get leftMiddleProximal() {\r\n        return this.getOptionalBone('leftMiddleProximal');\r\n    }\r\n    /**\r\n     * 左中指第二指骨(Optional)\r\n     */\r\n    public get leftMiddleIntermediate() {\r\n        return this.getOptionalBone('leftMiddleIntermediate');\r\n    }\r\n    /**\r\n     * 左中指第三指骨(Optional)\r\n     */\r\n    public get leftMiddleDistal() {\r\n        return this.getOptionalBone('leftMiddleDistal');\r\n    }\r\n    /**\r\n     * 左薬指第一指骨(Optional)\r\n     */\r\n    public get leftRingProximal() {\r\n        return this.getOptionalBone('leftRingProximal');\r\n    }\r\n    /**\r\n     * 左薬指第二指骨(Optional)\r\n     */\r\n    public get leftRingIntermediate() {\r\n        return this.getOptionalBone('leftRingIntermediate');\r\n    }\r\n    /**\r\n     * 左薬指第三指骨(Optional)\r\n     */\r\n    public get leftRingDistal() {\r\n        return this.getOptionalBone('leftRingDistal');\r\n    }\r\n    /**\r\n     * 左小指第一指骨(Optional)\r\n     */\r\n    public get leftLittleProximal() {\r\n        return this.getOptionalBone('leftLittleProximal');\r\n    }\r\n    /**\r\n     * 左小指第二指骨(Optional)\r\n     */\r\n    public get leftLittleIntermediate() {\r\n        return this.getOptionalBone('leftLittleIntermediate');\r\n    }\r\n    /**\r\n     * 左小指第三指骨(Optional)\r\n     */\r\n    public get leftLittleDistal() {\r\n        return this.getOptionalBone('leftLittleDistal');\r\n    }\r\n    /**\r\n     * 右親指第一指骨(Optional)\r\n     */\r\n    public get rightThumbProximal() {\r\n        return this.getOptionalBone('rightThumbProximal');\r\n    }\r\n    /**\r\n     * 右親指第二指骨(Optional)\r\n     */\r\n    public get rightThumbIntermediate() {\r\n        return this.getOptionalBone('rightThumbIntermediate');\r\n    }\r\n    /**\r\n     * 右親指第三指骨(Optional)\r\n     */\r\n    public get rightThumbDistal() {\r\n        return this.getOptionalBone('rightThumbDistal');\r\n    }\r\n    /**\r\n     * 右人差し指第一指骨(Optional)\r\n     */\r\n    public get rightIndexProximal() {\r\n        return this.getOptionalBone('rightIndexProximal');\r\n    }\r\n    /**\r\n     * 右人差し指第二指骨(Optional)\r\n     */\r\n    public get rightIndexIntermediate() {\r\n        return this.getOptionalBone('rightIndexIntermediate');\r\n    }\r\n    /**\r\n     * 右人差し指第三指骨(Optional)\r\n     */\r\n    public get rightIndexDistal() {\r\n        return this.getOptionalBone('rightIndexDistal');\r\n    }\r\n    /**\r\n     * 右中指第一指骨(Optional)\r\n     */\r\n    public get rightMiddleProximal() {\r\n        return this.getOptionalBone('rightMiddleProximal');\r\n    }\r\n    /**\r\n     * 右中指第二指骨(Optional)\r\n     */\r\n    public get rightMiddleIntermediate() {\r\n        return this.getOptionalBone('rightMiddleIntermediate');\r\n    }\r\n    /**\r\n     * 右中指第三指骨(Optional)\r\n     */\r\n    public get rightMiddleDistal() {\r\n        return this.getOptionalBone('rightMiddleDistal');\r\n    }\r\n    /**\r\n     * 右薬指第一指骨(Optional)\r\n     */\r\n    public get rightRingProximal() {\r\n        return this.getOptionalBone('rightRingProximal');\r\n    }\r\n    /**\r\n     * 右薬指第二指骨(Optional)\r\n     */\r\n    public get rightRingIntermediate() {\r\n        return this.getOptionalBone('rightRingIntermediate');\r\n    }\r\n    /**\r\n     * 右薬指第三指骨(Optional)\r\n     */\r\n    public get rightRingDistal() {\r\n        return this.getOptionalBone('rightRingDistal');\r\n    }\r\n    /**\r\n     * 右小指第一指骨(Optional)\r\n     */\r\n    public get rightLittleProximal() {\r\n        return this.getOptionalBone('rightLittleProximal');\r\n    }\r\n    /**\r\n     * 右小指第二指骨(Optional)\r\n     */\r\n    public get rightLittleIntermediate() {\r\n        return this.getOptionalBone('rightLittleIntermediate');\r\n    }\r\n    /**\r\n     * 右小指第三指骨(Optional)\r\n     */\r\n    public get rightLittleDistal() {\r\n        return this.getOptionalBone('rightLittleDistal');\r\n    }\r\n    /**\r\n     * 上胸(Optional)\r\n     */\r\n    public get upperChest() {\r\n        return this.getOptionalBone('upperChest');\r\n    }\r\n\r\n    /**\r\n     * 必須ボーンを取得する。取得出来ない場合は例外を発生する\r\n     *\r\n     * @throws BoneNotFoundError\r\n     * @param name HumanoidBoneName\r\n     */\r\n    private getMandatoryBone(name: string): TransformNode {\r\n        const node = this.nodeMap[name];\r\n        if (!node) {\r\n            throw new BoneNotFoundError(name);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * オプショナルボーンを取得する\r\n     *\r\n     * @param name HumanoidBoneName\r\n     */\r\n    private getOptionalBone(name: string): Nullable<TransformNode> {\r\n        return this.nodeMap && this.nodeMap[name] || null;\r\n    }\r\n}\r\n","export * from './errors';\r\nexport * from './humanoid-bone';\r\nexport * from './material-value-binding-merger';\r\nexport * from './vcast-vci-material-unity';\r\nexport * from './vci-interfaces';\r\nexport * from './vrm-extension';\r\nexport * from './vrm-file-loader';\r\nexport * from './vrm-interfaces';\r\nexport * from './vrm-manager';\r\nexport * from './vrm-material-generator';\r\n","import { Color3, Vector4 } from '@babylonjs/core/Maths/math';\r\nimport { Material, PBRMaterial, BaseTexture, Texture, Nullable } from '@babylonjs/core';\r\nimport { IVRMBlendShapeMaterialBind } from './vrm-interfaces';\r\nimport { MToonMaterial } from 'babylon-mtoon-material';\r\n\r\ntype SupportedMaterial = MToonMaterial | PBRMaterial;\r\n\r\n/**\r\n * firstValue は false 固定だが、 UniVRM に倣って定義している\r\n */\r\ntype Setter = (value: number, firstValue: boolean) => void;\r\n\r\nconst PBRMaterialTextureMap: {[propertyName: string]: keyof PBRMaterial} = {\r\n    _MainTex: 'albedoTexture',\r\n};\r\n\r\nconst PBRMaterialColorMap: {[propertyName: string]: keyof PBRMaterial} = {\r\n    _Color: 'albedoColor',\r\n};\r\n\r\nconst MToonMaterialTextureMap: {[propertyName: string]: keyof MToonMaterial} = {\r\n    _MainTex: 'diffuseTexture',\r\n    _EmissionMap: 'emissiveTexture',\r\n    _BumpMap: 'bumpTexture',\r\n    _ShadeTexture: 'shadeTexture',\r\n    _ReceiveShadowTexture: 'receiveShadowTexture',\r\n    _ShadingGradeTexture: 'shadingGradeTexture',\r\n    _RimTexture: 'rimTexture',\r\n    _SphereAdd: 'matCapTexture',\r\n    _OutlineWidthTexture: 'outlineWidthTexture',\r\n    _UvAnimMaskTexture: 'uvAnimationMaskTexture',\r\n};\r\n\r\nconst MToonMaterialColorMap: {[propertyName: string]: keyof MToonMaterial} = {\r\n    _Color: 'diffuseColor',\r\n    _ShadeColor: 'shadeColor',\r\n    _RimColor: 'rimColor',\r\n    _EmissionColor: 'emissiveColor',\r\n    _OutlineColor: 'outlineColor',\r\n};\r\n\r\n/**\r\n * @see https://github.com/vrm-c/UniVRM/blob/4ffd97c2e9339683ce9bf21e73f510bd90c2a5b2/Assets/VRM/Runtime/BlendShape/MaterialValueBindingMerger.cs\r\n */\r\nexport class MaterialValueBindingMerger {\r\n    private readonly m_materialMap: {[materialName: string]: SupportedMaterial} = {};\r\n    private readonly m_materialSetterMap: {[bindingKey: string]: Setter} = {};\r\n    private m_materialValueMap: {[bindingKey: string]: number} = {};\r\n    private m_used: {[targetKey: string]: any} = {};\r\n\r\n    private readonly baseValueCache: {[bindingKey: string]: Vector4} = {};\r\n    private materialValuesToApply: {[bindingKey: string]: IVRMBlendShapeMaterialBind} = {};\r\n\r\n    /**\r\n     * @param materials VRMの全 Material\r\n     * @param materialValues\r\n     */\r\n    public constructor(\r\n        materials: Material[],\r\n        private readonly materialValues: IVRMBlendShapeMaterialBind[]\r\n    ) {\r\n        if (materials.length === 0 || materialValues.length === 0) {\r\n            return;\r\n        }\r\n        // プロパティ名の変換に対応している MToonMaterial と PBRMaterial を保存する\r\n        materials.forEach((material) => {\r\n            if (material instanceof MToonMaterial || material instanceof PBRMaterial) {\r\n                this.m_materialMap[material.name] = material;\r\n            }\r\n        });\r\n        materialValues.forEach((materialValue) => {\r\n            const bindingKey = this.makeBindingKey(materialValue);\r\n            if (this.m_materialSetterMap[bindingKey]) {\r\n                return;\r\n            }\r\n            const material = this.m_materialMap[materialValue.materialName];\r\n            if (!material) {\r\n                return;\r\n            }\r\n            const baseValue = this.getMaterialProperty(material, materialValue.propertyName);\r\n            if (!baseValue || materialValue.targetValue.length !== 4) {\r\n                return;\r\n            }\r\n            // モーフィング用に baseValue (初期値) と materialValue を保存する\r\n            this.baseValueCache[bindingKey] = baseValue;\r\n            this.materialValuesToApply[bindingKey] = materialValue;\r\n\r\n            const targetValue = Vector4.FromArray(materialValue.targetValue);\r\n            const valueName = materialValue.propertyName;\r\n            // Unity と座標系が異なるため、テクスチャの vOffset を反転する\r\n            if (material instanceof PBRMaterial) {\r\n                if (Object.keys(PBRMaterialTextureMap).some((k) => valueName.startsWith(k))) {\r\n                    targetValue.w *= -1;\r\n                }\r\n            } else if (Object.keys(MToonMaterialTextureMap).some((k) => valueName.startsWith(k))) {\r\n                targetValue.w *= -1;\r\n            }\r\n            if (valueName.endsWith('_ST_S')) {\r\n                // テクスチャの u方向 のみ更新する\r\n                const setter: Setter = (value, firstValue) => {\r\n                    const propValue = firstValue\r\n                        ? baseValue.add((targetValue.subtract(baseValue)).scale(value))\r\n                        : this.getMaterialProperty(material, valueName)!.add(targetValue.subtract(baseValue).scale(value));\r\n                    const src = this.getMaterialProperty(material, valueName)!;\r\n                    src.x = propValue.x;\r\n                    src.z = propValue.z;\r\n                    this.updateMaterialProperty(material, valueName, src);\r\n                };\r\n                this.m_materialSetterMap[bindingKey] = setter;\r\n            } else if (valueName.endsWith('_ST_T')) {\r\n                // テクスチャの v方向 のみ更新する\r\n                const setter: Setter = (value, firstValue) => {\r\n                    const propValue = firstValue\r\n                        ? baseValue.add((targetValue.subtract(baseValue)).scale(value))\r\n                        : this.getMaterialProperty(material, valueName)!.add(targetValue.subtract(baseValue).scale(value));\r\n                    const src = this.getMaterialProperty(material, valueName)!;\r\n                    src.y = propValue.y;\r\n                    src.w = propValue.w;\r\n                    this.updateMaterialProperty(material, valueName, src);\r\n                };\r\n                this.m_materialSetterMap[bindingKey] = setter;\r\n            } else {\r\n                const setter: Setter = (value, firstValue) => {\r\n                    const propValue = firstValue\r\n                        ? baseValue.add((targetValue.subtract(baseValue)).scale(value))\r\n                        : this.getMaterialProperty(material, valueName)!.add(targetValue.subtract(baseValue).scale(value));\r\n                    this.updateMaterialProperty(material, valueName, propValue);\r\n                };\r\n                this.m_materialSetterMap[bindingKey] = setter;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * UniVRM では Dictionary のキー用のクラスを定義しているが、文字列で代用する\r\n     * MaterialValueBinding.BaseValue は対応するプロパティの初期値なので無視できる\r\n     */\r\n    private makeBindingKey(materialValue: IVRMBlendShapeMaterialBind): string {\r\n        return `${materialValue.materialName}_${materialValue.propertyName}_${materialValue.targetValue.join('-')}`;\r\n    }\r\n\r\n    /**\r\n     * UniVRM では Dictionary のキー用のクラスを定義しているが、文字列で代用する\r\n     */\r\n    private makeTargetKey(materialValue: IVRMBlendShapeMaterialBind): string {\r\n        return `${materialValue.materialName}_${materialValue.propertyName}`;\r\n    }\r\n\r\n    /**\r\n     * モーフィングを行う\r\n     * @param value 値(0〜1)\r\n     */\r\n    public morphing(value: number) {\r\n        this.accumulateValue(value);\r\n        this.apply();\r\n    }\r\n\r\n    /**\r\n     * materialValue ごとに重みを計算する\r\n     */\r\n    private accumulateValue(value: number): void {\r\n        this.materialValues.forEach((materialValue) => {\r\n            const bindingKey = this.makeBindingKey(materialValue);\r\n            if (this.m_materialValueMap[bindingKey]) {\r\n                this.m_materialValueMap[bindingKey] += value;\r\n            } else {\r\n                this.m_materialValueMap[bindingKey] = value;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Material のプロパティを更新する\r\n     */\r\n    private apply(): void {\r\n        this.m_used = {};\r\n\r\n        Object.entries(this.materialValuesToApply).forEach(([bindingKey, materialValue]) => {\r\n            const targetKey = this.makeTargetKey(materialValue);\r\n            if (!(targetKey in this.m_used)) {\r\n                const material = this.m_materialMap[materialValue.materialName];\r\n                const value = this.baseValueCache[bindingKey].clone();\r\n\r\n                // 対象のプロパティを初期値に戻す\r\n                const valueName = materialValue.propertyName;\r\n                if (valueName.endsWith('_ST_S')) {\r\n                    const v = this.getMaterialProperty(material, valueName)!;\r\n                    value.y = v.y;\r\n                    value.w = v.w;\r\n                } else if (valueName.endsWith('_ST_T')) {\r\n                    const v = this.getMaterialProperty(material, valueName)!;\r\n                    value.x = v.x;\r\n                    value.z = v.z;\r\n                }\r\n\r\n                this.updateMaterialProperty(material, valueName, value);\r\n                this.m_used[targetKey] = true;\r\n            }\r\n\r\n            const setter = this.m_materialSetterMap[bindingKey];\r\n            if (setter) {\r\n                setter(this.m_materialValueMap[bindingKey], false);\r\n            }\r\n        });\r\n\r\n        this.m_materialValueMap = {};\r\n    }\r\n\r\n    /**\r\n     * マテリアルのテクスチャか色に対応する Vector4 を取得する\r\n     */\r\n    private getMaterialProperty(material: SupportedMaterial, propertyName: string): Nullable<Vector4> {\r\n        const match = propertyName.match(/^(_[^_]+)/);\r\n        if (!match || !match[1]) {\r\n            return null;\r\n        }\r\n        const key = match[1];\r\n        if (material instanceof PBRMaterial) {\r\n            if (PBRMaterialTextureMap[key]) {\r\n                return this.convertTextureIntoVector4WhenNotNull(material[PBRMaterialTextureMap[key]]);\r\n            }\r\n            if (PBRMaterialColorMap[key]) {\r\n                return this.convertColorIntoVector4(material[PBRMaterialColorMap[key]], material.alpha);\r\n            }\r\n            return null;\r\n        }\r\n        // MToonMaterial\r\n        if (MToonMaterialTextureMap[key]) {\r\n            return this.convertTextureIntoVector4WhenNotNull(material[MToonMaterialTextureMap[key]]);\r\n        }\r\n        if (MToonMaterialColorMap[key]) {\r\n            return this.convertColorIntoVector4(material[MToonMaterialColorMap[key]], material.alpha);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Texture を Vector4 に変換する\r\n     */\r\n    private convertTextureIntoVector4WhenNotNull(texture: Nullable<BaseTexture>): Nullable<Vector4> {\r\n        if (!texture) {\r\n            return null;\r\n        }\r\n        const t = texture as Texture;\r\n        return new Vector4(\r\n            t.uScale,\r\n            t.vScale,\r\n            t.uOffset,\r\n            t.vOffset,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Color3 に alpha を加えて Vector4 に変換する\r\n     */\r\n    private convertColorIntoVector4(color: Color3, alpha: number): Vector4 {\r\n        return new Vector4(\r\n            color.r,\r\n            color.g,\r\n            color.b,\r\n            alpha,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * マテリアルのテクスチャか色を更新する\r\n     */\r\n    private updateMaterialProperty(material: SupportedMaterial, propertyName: string, value: Vector4): void {\r\n        const match = propertyName.match(/^(_[^_]+)/);\r\n        if (!match || !match[1]) {\r\n            return;\r\n        }\r\n        const key = match[1];\r\n        if (material instanceof PBRMaterial) {\r\n            if (PBRMaterialTextureMap[key]) {\r\n                this.updateTextureWhenNotNull(material[PBRMaterialTextureMap[key]], value);\r\n                return;\r\n            }\r\n            if (PBRMaterialColorMap[key]) {\r\n                if (key === '_Color') {\r\n                    material.alpha = value.w;\r\n                }\r\n                this.updateColor(material[PBRMaterialColorMap[key]], value);\r\n            }\r\n            return;\r\n        }\r\n        // MToonMaterial\r\n        if (MToonMaterialTextureMap[key]) {\r\n            this.updateTextureWhenNotNull(material[MToonMaterialTextureMap[key]], value);\r\n            return;\r\n        }\r\n        if (MToonMaterialColorMap[key]) {\r\n            if (key === '_Color') {\r\n                material.alpha = value.w;\r\n            }\r\n            this.updateColor(material[MToonMaterialColorMap[key]], value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Texture を Vector4 で更新する\r\n     */\r\n    private updateTextureWhenNotNull(texture: Nullable<BaseTexture>, value: Vector4): void {\r\n        if (texture) {\r\n            const t = texture as Texture;\r\n            t.uScale = value.x;\r\n            t.vScale = value.y;\r\n            t.uOffset = value.z;\r\n            t.vOffset = value.w;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Color3 を Vector4 で更新する\r\n     */\r\n    private updateColor(color: Color3, value: Vector4): void {\r\n        color.r = value.x;\r\n        color.g = value.y;\r\n        color.b = value.z;\r\n    }\r\n}\r\n","import { Vector3 } from '@babylonjs/core/Maths/math';\r\nimport { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\nimport { SphereBuilder } from '@babylonjs/core/Meshes/Builders/sphereBuilder';\r\nimport { Collider } from './collider';\r\n\r\n/**\r\n * VRM SpringBone ColliderGroup\r\n */\r\nexport class ColliderGroup {\r\n    public readonly colliders: Collider[] = [];\r\n\r\n    /**\r\n     * @param transform The node of the collider group for setting up collision detections.\r\n     */\r\n    public constructor(\r\n        public readonly transform: TransformNode,\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Add offsetted collider\r\n     *\r\n     * @param offset The local coordinate from the node of the collider group.\r\n     * @param radius The radius of the collider.\r\n     */\r\n    public addCollider(offset: Vector3, radius: number) {\r\n        const sphere = SphereBuilder.CreateSphere(`${this.transform.name}_ColliderSphere`, {\r\n            segments: 6,\r\n            diameter: radius * 2.0,\r\n            updatable: true,\r\n        }, this.transform.getScene());\r\n        sphere.setParent(this.transform);\r\n        sphere.setPositionWithLocalVector(offset);\r\n        sphere.setEnabled(false);\r\n\r\n        this.colliders.push(new Collider(offset, radius, sphere));\r\n    }\r\n}\r\n","import { Mesh } from '@babylonjs/core';\r\nimport { Vector3 } from '@babylonjs/core/Maths/math';\r\n\r\n/**\r\n * Collider\r\n */\r\nexport class Collider {\r\n    /**\r\n     * @param offset The local coordinate from the node of the collider group.\r\n     * @param radius The radius of the collider.\r\n     * @param sphere The spehere mesh for worldMatrix and gizmo.\r\n     */\r\n    public constructor(\r\n        public readonly offset: Vector3,\r\n        public readonly radius: number,\r\n        public readonly sphere: Mesh,\r\n    ) {\r\n    }\r\n}\r\n","import { Vector3, Quaternion } from '@babylonjs/core/Maths/math';\r\n\r\nconst _v3from = new Vector3();\r\nconst _v3to = new Vector3();\r\n\r\n/**\r\n * Quaternion Helper\r\n */\r\nexport class QuaternionHelper {\r\n    /**\r\n     * Creates a rotation which rotates from fromDirection to toDirection.\r\n     *\r\n     * @todo After upgrading babylon.js, use Quaternion.FromUnitVectorsToRef.\r\n     * @see https://github.com/BabylonJS/Babylon.js/blob/2dbaeaa9761c42b7e39caddf494b920cdcdd2807/packages/dev/core/src/Maths/math.vector.ts#L4149-L4164\r\n     */\r\n    public static fromToRotationToRef(from: Vector3, to: Vector3, result: Quaternion) {\r\n        from.normalizeToRef(_v3from);\r\n        to.normalizeToRef(_v3to);\r\n        const r = Vector3.Dot(_v3from, _v3to) + 1;\r\n        if (r < 0.001) {\r\n            if (Math.abs(_v3from.x) > Math.abs(_v3from.z)) {\r\n                result.set(-_v3from.y, _v3from.x, 0, 0);\r\n            } else {\r\n                result.set(0, -_v3from.z, _v3from.y, 0);\r\n            }\r\n        } else {\r\n            Vector3.CrossToRef(_v3from, _v3to, _v3to);\r\n            result.set(_v3to.x, _v3to.y, _v3to.z, r);\r\n        }\r\n\r\n        result.normalize();\r\n    }\r\n}\r\n","import { Vector3 } from '@babylonjs/core/Maths/math';\r\nimport { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { IVRMSecondaryAnimation } from '../vrm-interfaces';\r\nimport { ColliderGroup } from './collider-group';\r\nimport { VRMSpringBone } from './vrm-spring-bone';\r\n\r\n/**\r\n * function to get bone from nodeIndex\r\n */\r\ntype getBone = (nodeIndex: number) => Nullable<TransformNode>;\r\n\r\n/**\r\n * VRM SpringBone Controller\r\n */\r\nexport class SpringBoneController {\r\n    /**\r\n     * Spring Bone List\r\n     */\r\n    private springs: VRMSpringBone[];\r\n\r\n    /**\r\n     * @param ext SecondaryAnimation Object\r\n     * @param getBone\r\n     */\r\n    public constructor(\r\n        public readonly ext: IVRMSecondaryAnimation,\r\n        getBone: getBone,\r\n    ) {\r\n        const colliderGroups = this.constructColliderGroups(getBone);\r\n        this.springs = this.constructSprings(getBone, colliderGroups);\r\n    }\r\n\r\n    public dispose() {\r\n        this.springs = [];\r\n    }\r\n\r\n    /**\r\n     * Update all SpringBones\r\n     *\r\n     * @param deltaTime Elapsed sec from previous frame\r\n     * @see https://docs.unity3d.com/ScriptReference/Time-deltaTime.html\r\n     */\r\n    public async update(deltaTime: number): Promise<void> {\r\n        // ポーズ後のあらぶり防止のため clamp\r\n        deltaTime = Math.max(0.0, Math.min(16.666, deltaTime)) / 1000;\r\n        const promises = this.springs.map<Promise<void>>((spring) => {\r\n            return spring.update(deltaTime);\r\n        });\r\n        return Promise.all(promises).then(() => { /* Do nothing */ });\r\n    }\r\n\r\n    private constructColliderGroups(getBone: getBone) {\r\n        if (!this.ext.colliderGroups || !this.ext.colliderGroups.length) {\r\n            return [];\r\n        }\r\n        const colliderGroups: ColliderGroup[] = [];\r\n        this.ext.colliderGroups.forEach((colliderGroup) => {\r\n            const bone = getBone(colliderGroup.node) as TransformNode;\r\n            const g = new ColliderGroup(bone);\r\n            colliderGroup.colliders.forEach((collider) => {\r\n                g.addCollider(\r\n                    // VRM 右手系Y_UP, -Z_Front から Babylon.js 左手系Y_UP, +Z_Front にする\r\n                    new Vector3(-collider.offset.x, collider.offset.y, -collider.offset.z),\r\n                    collider.radius,\r\n                );\r\n            });\r\n            colliderGroups.push(g);\r\n        });\r\n        return colliderGroups;\r\n    }\r\n\r\n    private constructSprings(getBone: getBone, colliderGroups: ColliderGroup[]) {\r\n        if (!this.ext.boneGroups || !this.ext.boneGroups.length) {\r\n            return [];\r\n        }\r\n        const springs: VRMSpringBone[] = [];\r\n        this.ext.boneGroups.forEach((spring) => {\r\n            const rootBones = (spring.bones || []).map((bone) => {\r\n                return getBone(bone) as TransformNode;\r\n            });\r\n            const springColliders = (spring.colliderGroups || []).map<ColliderGroup>((g) => {\r\n                return colliderGroups[g];\r\n            });\r\n            springs.push(new VRMSpringBone(\r\n                spring.comment,\r\n                spring.stiffiness,\r\n                spring.gravityPower,\r\n                new Vector3(\r\n                    // VRM 右手系Y_UP, -Z_Front から Babylon.js 左手系Y_UP, +Z_Front にする\r\n                    -spring.gravityDir.x,\r\n                    spring.gravityDir.y,\r\n                    -spring.gravityDir.z,\r\n                ).normalize(),\r\n                spring.dragForce,\r\n                getBone(spring.center),\r\n                spring.hitRadius,\r\n                rootBones,\r\n                springColliders,\r\n            ));\r\n        });\r\n        return springs;\r\n    }\r\n}\r\n","import { Matrix, Quaternion, Vector3 } from '@babylonjs/core/Maths/math';\r\nimport { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { ColliderGroup } from './collider-group';\r\nimport { QuaternionHelper } from './quaternion-helper';\r\n// based on\r\n// http://rocketjump.skr.jp/unity3d/109/\r\n// https://github.com/dwango/UniVRM/blob/master/Scripts/SpringBone/VRMSpringBone.cs\r\n// https://github.com/pixiv/three-vrm/blob/aad551e041fad553c19d2091e5f5eaff1eb8faa8/packages/three-vrm/src/springbone/VRMSpringBone.ts\r\n\r\nconst IDENTITY_MATRIX = Matrix.Identity();\r\n\r\nconst _v3A = new Vector3();\r\nconst _v3B = new Vector3();\r\nconst _v3C = new Vector3();\r\nconst _quatA = new Quaternion();\r\nconst _matA = new Matrix();\r\nconst _matB = new Matrix();\r\n\r\n/**\r\n * Verlet Spring Bone\r\n */\r\nexport class VRMSpringBoneLogic {\r\n    /**\r\n     * initial local transform Marix\r\n     */\r\n    private readonly initialLocalMatrix: Matrix;\r\n    /**\r\n     * Cloned initial local rotation\r\n     */\r\n    private readonly initialLocalRotation: Quaternion;\r\n    /**\r\n     * Cloned initial local child position\r\n     */\r\n    private readonly initialLocalChildPosition: Vector3;\r\n\r\n    /**\r\n     * Length of the bone in relative space unit.\r\n     */\r\n    private readonly centerSpaceBoneLength: number;\r\n    /**\r\n     * Position of the bone in relative space unit.\r\n     */\r\n    private readonly centerSpacePosition: Vector3;\r\n    /**\r\n     * Reference of parent rotation\r\n     */\r\n    private readonly boneAxis: Vector3;\r\n\r\n    private currentTail: Vector3 = new Vector3();\r\n    private prevTail: Vector3 = new Vector3();\r\n    private nextTail: Vector3 = new Vector3();\r\n\r\n    /**\r\n     * @param center Center reference of TransformNode\r\n     * @param radius Collision Radius\r\n     * @param transform Base TransformNode\r\n     */\r\n    public constructor(\r\n        public readonly center: Nullable<TransformNode>,\r\n        public readonly radius: number,\r\n        public readonly transform: TransformNode\r\n    ) {\r\n        // Initialize rotationQuaternion when not initialized\r\n        if (!transform.rotationQuaternion) {\r\n            transform.rotationQuaternion = transform.rotation.toQuaternion();\r\n        }\r\n\r\n        const worldMatrix = transform.getWorldMatrix();\r\n        this.centerSpacePosition = worldMatrix.getTranslation();\r\n\r\n        this.initialLocalMatrix = transform._localMatrix.clone();\r\n        this.initialLocalRotation = transform.rotationQuaternion.clone();\r\n\r\n        const children = transform.getChildTransformNodes(true);\r\n        if (children.length === 0) {\r\n            this.initialLocalChildPosition = transform.position.clone().normalize().scaleInPlace(0.07);\r\n        } else {\r\n            this.initialLocalChildPosition = children[0].position.clone();\r\n        }\r\n\r\n        Vector3.TransformCoordinatesToRef(this.initialLocalChildPosition, worldMatrix, this.currentTail);\r\n        this.prevTail.copyFrom(this.currentTail);\r\n        this.nextTail.copyFrom(this.currentTail);\r\n\r\n        this.boneAxis = this.initialLocalChildPosition.normalizeToNew();\r\n        Vector3.TransformCoordinatesToRef(this.initialLocalChildPosition, worldMatrix, _v3A);\r\n        this.centerSpaceBoneLength = _v3A\r\n            .subtractInPlace(this.centerSpacePosition)\r\n            .length();\r\n\r\n        if (center) {\r\n            this.getMatrixWorldToCenter(_matA);\r\n\r\n            Vector3.TransformCoordinatesToRef(this.currentTail, _matA, this.currentTail);\r\n            Vector3.TransformCoordinatesToRef(this.prevTail, _matA, this.prevTail);\r\n            Vector3.TransformCoordinatesToRef(this.nextTail, _matA, this.nextTail);\r\n\r\n            worldMatrix.multiplyToRef(_matA, _matA);\r\n\r\n            _matA.getTranslationToRef(this.centerSpacePosition);\r\n\r\n            Vector3.TransformCoordinatesToRef(this.initialLocalChildPosition, _matA, _v3A);\r\n            this.centerSpaceBoneLength = _v3A\r\n                .subtractInPlace(this.centerSpacePosition)\r\n                .length();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update Tail position\r\n     *\r\n     * @param stiffnessForce Current frame stiffness\r\n     * @param dragForce Current frame drag force\r\n     * @param external Current frame external force\r\n     * @param colliderGroups Current frame colliderGroups\r\n     */\r\n    public update(\r\n        stiffnessForce: number,\r\n        dragForce: number,\r\n        external: Vector3,\r\n        colliderGroups: ColliderGroup[],\r\n    ): void {\r\n        if (Number.isNaN(this.transform.getAbsolutePosition().x)) {\r\n            // Do not update when absolute position is invalid\r\n            return;\r\n        }\r\n\r\n        // Get bone position in center space\r\n        this.getMatrixWorldToCenter(_matA);\r\n        this.transform.getWorldMatrix().multiplyToRef(_matA, _matA);\r\n        _matA.getTranslationToRef(this.centerSpacePosition);\r\n\r\n        // Get parent position in center space\r\n        this.getMatrixWorldToCenter(_matB);\r\n        this.getParentMatrixWorld().multiplyToRef(_matB, _matB);\r\n\r\n        // verlet積分で次の位置を計算\r\n        this.nextTail.copyFrom(this.currentTail);\r\n        {\r\n            // 減衰付きで前のフレームの移動を継続\r\n            _v3A\r\n                .copyFrom(this.currentTail)\r\n                .subtractInPlace(this.prevTail)\r\n                .scaleInPlace(1.0 - dragForce);\r\n            this.nextTail.addInPlace(_v3A);\r\n        }\r\n        {\r\n            // 親の回転による子ボーンの移動目標\r\n            _v3A.copyFrom(this.boneAxis);\r\n            Vector3.TransformCoordinatesToRef(_v3A, this.initialLocalMatrix, _v3A);\r\n            Vector3.TransformCoordinatesToRef(_v3A, _matB, _v3A);\r\n            _v3A\r\n                .subtractInPlace(this.centerSpacePosition)\r\n                .normalize()\r\n                .scaleInPlace(stiffnessForce);\r\n            this.nextTail.addInPlace(_v3A);\r\n        }\r\n        {\r\n            // 外力による移動量\r\n            this.nextTail.addInPlace(external);\r\n        }\r\n        {\r\n            // 長さを boneLength に強制\r\n            this.nextTail\r\n                .subtractInPlace(this.centerSpacePosition)\r\n                .normalize()\r\n                .scaleInPlace(this.centerSpaceBoneLength)\r\n                .addInPlace(this.centerSpacePosition);\r\n        }\r\n        {\r\n            // Collision で移動\r\n            this.collide(colliderGroups, this.nextTail);\r\n        }\r\n\r\n        this.prevTail.copyFrom(this.currentTail);\r\n        this.currentTail.copyFrom(this.nextTail);\r\n\r\n        this.initialLocalMatrix.multiplyToRef(_matB, _matA);\r\n        const initialCenterSpaceMatrixInv = _matA.invert();\r\n        Vector3.TransformCoordinatesToRef(this.nextTail, initialCenterSpaceMatrixInv, _v3A);\r\n        QuaternionHelper.fromToRotationToRef(this.boneAxis, _v3A, _quatA);\r\n        const applyRotation = _quatA;\r\n        this.initialLocalRotation.multiplyToRef(applyRotation, this.transform.rotationQuaternion!);\r\n\r\n        // update WorldMatrix\r\n        this.transform.computeWorldMatrix(true);\r\n    }\r\n\r\n    /**\r\n      * Create a matrix that converts world space into center space.\r\n      * @param result Target matrix\r\n      */\r\n    private getMatrixWorldToCenter(result: Matrix): Matrix {\r\n        if (this.center) {\r\n            this.center.getWorldMatrix().invertToRef(result);\r\n        } else {\r\n            result.copyFrom(IDENTITY_MATRIX);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns the world matrix of its parent object.\r\n     */\r\n    private getParentMatrixWorld(): Matrix {\r\n        return this.transform.parent ? (this.transform.parent as TransformNode).getWorldMatrix() : IDENTITY_MATRIX;\r\n    }\r\n\r\n    /**\r\n     * 衝突判定を行う\r\n     * @param colliderGroups\r\n     * @param tail\r\n     */\r\n    private collide(colliderGroups: ColliderGroup[], tail: Vector3) {\r\n        colliderGroups.forEach((colliderGroup) => {\r\n            colliderGroup.colliders.forEach((collider) => {\r\n                this.getMatrixWorldToCenter(_matA);\r\n                collider.sphere.computeWorldMatrix().multiplyToRef(_matA, _matA);\r\n                _matA.getTranslationToRef(_v3A);\r\n                const colliderCenterSpacePosition = _v3A;\r\n\r\n                let maxAbsScale = 0;\r\n                collider.sphere.absoluteScaling.asArray().forEach((s) => {\r\n                    maxAbsScale = Math.max(maxAbsScale, Math.abs(s));\r\n                });\r\n                const colliderRadius = collider.radius * maxAbsScale;\r\n                const r = this.radius + colliderRadius;\r\n\r\n                tail.subtractToRef(colliderCenterSpacePosition, _v3B);\r\n                if (_v3B.lengthSquared() <= r * r) {\r\n                    const normal = _v3B\r\n                        .copyFrom(tail)\r\n                        .subtractInPlace(colliderCenterSpacePosition)\r\n                        .normalize();\r\n                    const posFromCollider = _v3C\r\n                        .copyFrom(colliderCenterSpacePosition)\r\n                        .addInPlace(normal.scaleInPlace(r));\r\n\r\n                    tail.copyFrom(\r\n                        posFromCollider\r\n                            .subtractInPlace(this.centerSpacePosition)\r\n                            .normalize()\r\n                            .scaleInPlace(this.centerSpaceBoneLength)\r\n                            .addInPlace(this.centerSpacePosition)\r\n                    );\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { StandardMaterial } from '@babylonjs/core/Materials/standardMaterial';\r\nimport { Color3, Vector3 } from '@babylonjs/core/Maths/math';\r\nimport { MeshBuilder } from '@babylonjs/core/Meshes/meshBuilder';\r\nimport { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { ColliderGroup } from './collider-group';\r\nimport { VRMSpringBoneLogic } from './vrm-spring-bone-logic';\r\n\r\n/**\r\n * @see https://github.com/vrm-c/UniVRM/blob/master/Assets/VRM/UniVRM/Scripts/SpringBone/VRMSpringBone.cs\r\n */\r\nexport class VRMSpringBone {\r\n    public verlets: VRMSpringBoneLogic[] = [];\r\n    private activeBones: TransformNode[] = [];\r\n\r\n    /** @hidden */\r\n    private drawGizmo = false;\r\n\r\n    /**\r\n     * @see https://vrm.dev/en/vrm_spec/\r\n     * @param comment Annotation comment\r\n     * @param stiffness The resilience of the swaying object (the power of returning to the initial pose).\r\n     * @param gravityPower The strength of gravity.\r\n     * @param gravityDir The direction of gravity. Set (0, -1, 0) for simulating the gravity. Set (1, 0, 0) for simulating the wind.\r\n     * @param dragForce The resistance (deceleration) of automatic animation.\r\n     * @param center The reference point of a swaying object can be set at any location except the origin.\r\n     *               When implementing UI moving with warp,\r\n     *               the parent node to move with warp can be specified if you don't want to make the object swaying with warp movement.\r\n     * @param hitRadius The radius of the sphere used for the collision detection with colliders.\r\n     * @param bones Specify the node index of the root bone of the swaying object.\r\n     * @param colliderGroups Specify the index of the collider group for collisions with swaying objects.\r\n     */\r\n    public constructor(\r\n        public readonly comment: string,\r\n        public readonly stiffness: number,\r\n        public readonly gravityPower: number,\r\n        public readonly gravityDir: Vector3,\r\n        public readonly dragForce: number,\r\n        public readonly center: Nullable<TransformNode>,\r\n        public readonly hitRadius: number,\r\n        public readonly bones: Array<Nullable<TransformNode>>,\r\n        public readonly colliderGroups: ColliderGroup[],\r\n    ) {\r\n        this.activeBones = this.bones.filter((bone) => bone !== null) as TransformNode[];\r\n        this.activeBones.forEach((bone) => {\r\n            [bone].concat(bone.getChildTransformNodes()).forEach((b) => {\r\n                this.verlets.push(new VRMSpringBoneLogic(\r\n                    this.center,\r\n                    this.hitRadius,\r\n                    b\r\n                ));\r\n            });\r\n        });\r\n\r\n        if (this.drawGizmo) {\r\n            this.setupGizmo();\r\n        }\r\n    }\r\n\r\n    private setupGizmo() {\r\n        this.activeBones.forEach((bone) => {\r\n            const scene = bone.getScene();\r\n            [bone].concat(bone.getChildTransformNodes()).forEach((b) => {\r\n                const boneGizmo = MeshBuilder.CreateSphere(b.name + '_boneGizmo', {\r\n                    segments: 6,\r\n                    diameter: this.hitRadius * 2,\r\n                    updatable: true,\r\n                }, scene);\r\n                const mat = new StandardMaterial(b.name + '_boneGizmomat', scene);\r\n                mat.emissiveColor = Color3.Red();\r\n                mat.wireframe = true;\r\n                boneGizmo.material = mat;\r\n                boneGizmo.setParent(b);\r\n                boneGizmo.position = Vector3.Zero();\r\n            });\r\n        });\r\n\r\n        this.colliderGroups.forEach((group) => {\r\n            const scene = group.transform.getScene();\r\n            group.colliders.forEach((collider) => {\r\n                const sphere = collider.sphere;\r\n                if (!sphere.isEnabled(false)) {\r\n                    sphere.setEnabled(true);\r\n                    const mat = new StandardMaterial(group.transform.name + '_colliderGizmomat', scene);\r\n                    mat.emissiveColor = Color3.Yellow();\r\n                    mat.wireframe = true;\r\n                    sphere.material = mat;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update bones\r\n     *\r\n     * @param deltaTime\r\n     */\r\n    public async update(deltaTime: number): Promise<void> {\r\n        const stiffness = this.stiffness * deltaTime;\r\n        const external = this.gravityDir.scale(this.gravityPower * deltaTime);\r\n\r\n        const promises = this.verlets.map<Promise<void>>((verlet) => {\r\n            return new Promise<void>((resolve) => {\r\n                verlet.update(\r\n                    stiffness,\r\n                    this.dragForce,\r\n                    external,\r\n                    this.colliderGroups,\r\n                );\r\n                resolve();\r\n            });\r\n        });\r\n\r\n        return Promise.all(promises).then(() => { /* Do Nothing */ });\r\n    }\r\n}\r\n","import { ArcRotateCamera } from '@babylonjs/core/Cameras/arcRotateCamera';\r\nimport { Engine } from '@babylonjs/core/Engines/engine';\r\nimport { DirectionalLight } from '@babylonjs/core/Lights/directionalLight';\r\nimport { HemisphericLight } from '@babylonjs/core/Lights/hemisphericLight';\r\nimport { PointLight } from '@babylonjs/core/Lights/pointLight';\r\nimport { ShadowGenerator } from '@babylonjs/core/Lights/Shadows/shadowGenerator';\r\nimport { SceneLoader } from '@babylonjs/core/Loading/sceneLoader';\r\nimport { Vector3 } from '@babylonjs/core/Maths/math';\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport { Scene } from '@babylonjs/core/scene';\r\nimport { VRMManager } from '../vrm-manager';\r\n\r\nimport '@babylonjs/core/Helpers/sceneHelpers';\r\nimport '@babylonjs/core/Meshes/Builders/sphereBuilder';\r\nimport '@babylonjs/core/Meshes/Builders/torusKnotBuilder';\r\nimport '@babylonjs/inspector';\r\nimport '../index';\r\n\r\nasync function main() {\r\n    const debugProperties = getDebugProperties();\r\n    const canvas = document.getElementById('main-canvas') as HTMLCanvasElement;\r\n    const engine = new Engine(\r\n        canvas,\r\n        true,\r\n        {\r\n            alpha: false,\r\n            disableWebGL2Support: debugProperties.webgl1,\r\n        },\r\n    );\r\n\r\n    const scene = new Scene(engine);\r\n    const camera = new ArcRotateCamera('MainCamera1', 0, 0, 3, new Vector3(0, 1.2, 0), scene, true);\r\n    camera.lowerRadiusLimit = 0.1;\r\n    camera.upperRadiusLimit = 20;\r\n    camera.wheelDeltaPercentage = 0.01;\r\n    camera.minZ = 0.3;\r\n    camera.position = new Vector3(0, 1.2, -3);\r\n    camera.attachControl(canvas, true);\r\n\r\n    scene.createDefaultEnvironment({\r\n        createGround: true,\r\n        createSkybox: false,\r\n        enableGroundMirror: false,\r\n        enableGroundShadow: false,\r\n    });\r\n\r\n    // Lights\r\n    const directionalLight = new DirectionalLight('DirectionalLight1', new Vector3(0, -0.5, 1.0), scene);\r\n    directionalLight.position = new Vector3(0, 25, -50);\r\n    directionalLight.setEnabled(true);\r\n    const hemisphericLight = new HemisphericLight('HemisphericLight1', new Vector3(-0.2, -0.8, -1), scene);\r\n    hemisphericLight.setEnabled(false);\r\n    const pointLight = new PointLight('PointLight1', new Vector3(0, 0, 1), scene);\r\n    pointLight.setEnabled(false);\r\n\r\n    // Meshes\r\n    const standardMaterialSphere = Mesh.CreateSphere('StandardMaterialSphere1', 16, 1, scene);\r\n    standardMaterialSphere.position = new Vector3(1.5, 1.2, 0);\r\n    standardMaterialSphere.receiveShadows = true;\r\n\r\n    const shadowCaster = Mesh.CreateTorusKnot('ShadowCaster', 1, 0.2, 32, 32, 2, 3, scene);\r\n    shadowCaster.position = new Vector3(0.0, 5.0, -10.0);\r\n    shadowCaster.setEnabled(debugProperties.shadow);\r\n    if (debugProperties.shadow) {\r\n        const shadowGenerator = new ShadowGenerator(1024, directionalLight);\r\n        shadowGenerator.addShadowCaster(shadowCaster);\r\n    }\r\n\r\n    if (debugProperties.inspector) {\r\n        await scene.debugLayer.show({\r\n            globalRoot: document.getElementById('wrapper') as HTMLElement,\r\n        });\r\n    }\r\n\r\n    // Expose current scene\r\n    (window as any).currentScene = scene;\r\n\r\n    scene.onBeforeRenderObservable.add(() => {\r\n        // SpringBone\r\n        if (!scene.metadata || !scene.metadata.vrmManagers) {\r\n            return;\r\n        }\r\n        const managers = scene.metadata.vrmManagers as VRMManager[];\r\n        const deltaTime = scene.getEngine().getDeltaTime();\r\n        managers.forEach((manager) => {\r\n            manager.update(deltaTime);\r\n        });\r\n    });\r\n    engine.runRenderLoop(() => {\r\n        scene.render();\r\n        shadowCaster.rotate(Vector3.Up(), 0.01);\r\n    });\r\n    window.addEventListener('resize', () => {\r\n        engine.resize();\r\n    });\r\n    await SceneLoader.AppendAsync('./', 'AliciaSolid.vrm', scene);\r\n\r\n    let fileCount = 1;\r\n    (document.getElementById('file-input') as HTMLInputElement).addEventListener('change', (evt) => {\r\n        const file = (evt as any).target.files[0];\r\n        console.log(`loads ${file.name} ${file.size} bytes`);\r\n        const currentMeshCount = scene.meshes.length;\r\n        SceneLoader.Append('file:', file, scene, () => {\r\n            console.log(`loaded ${file.name}`);\r\n            for (let i = currentMeshCount; i < scene.meshes.length; i++) {\r\n                scene.meshes[i].translate(Vector3.Right(), 1.5 * fileCount);\r\n                scene.meshes[i].receiveShadows = true;\r\n            }\r\n            fileCount++;\r\n        });\r\n    });\r\n}\r\n\r\ninterface DebugProperties {\r\n    webgl1: boolean;\r\n    shadow: boolean;\r\n    inspector: boolean;\r\n}\r\n\r\nfunction getDebugProperties(): DebugProperties {\r\n    const href = window.location.href;\r\n\r\n    return {\r\n        webgl1: href.includes('webgl1'),\r\n        shadow: href.includes('shadow'),\r\n        inspector: href.includes('inspector'),\r\n    };\r\n}\r\n\r\nmain().catch((reason) => {\r\n    console.error(reason);\r\n});\r\n","import { Material } from '@babylonjs/core/Materials/material';\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { GLTFLoader, IGLTFLoaderExtension, IMaterial } from '@babylonjs/loaders/glTF/2.0';\r\nimport { VRMMaterialGenerator } from './vrm-material-generator';\r\n\r\n/**\r\n * `extensions` に入る拡張キー\r\n */\r\nconst NAME = 'VCAST_vci_material_unity';\r\n\r\n/**\r\n * VCAST_vci_material_unity 拡張を処理する\r\n */\r\nexport class VCAST_vci_material_unity implements IGLTFLoaderExtension {\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public readonly name = NAME;\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public enabled = true;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public constructor(\r\n        private loader: GLTFLoader,\r\n    ) {}\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public dispose(): void {\r\n        (this.loader as any) = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public _loadMaterialAsync(\r\n        context: string,\r\n        material: IMaterial,\r\n        mesh: Mesh,\r\n        babylonDrawMode: number,\r\n        assign: (babylonMaterial: Material) => void,\r\n    ): Nullable<Promise<Material>> {\r\n        // ジェネレータでマテリアルを生成する\r\n        return (new VRMMaterialGenerator(this.loader)).generate(context, material, mesh, babylonDrawMode, assign);\r\n    }\r\n}\r\n\r\n// ローダーに登録する\r\nGLTFLoader.RegisterExtension(NAME, (loader) => new VCAST_vci_material_unity(loader));\r\n","import { Material } from '@babylonjs/core/Materials/material';\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { GLTFLoader, IGLTFLoaderExtension, IMaterial, IMeshPrimitive } from '@babylonjs/loaders/glTF/2.0';\r\nimport { VRMManager } from './vrm-manager';\r\nimport { VRMMaterialGenerator } from './vrm-material-generator';\r\n\r\n/**\r\n * `extensions` に入る拡張キー\r\n */\r\nconst NAME = 'VRM';\r\n\r\n/**\r\n * VRM 拡張を処理する\r\n * [Specification](https://github.com/vrm-c/UniVRM/tree/master/specification/)\r\n */\r\nexport class VRM implements IGLTFLoaderExtension {\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public readonly name = NAME;\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public enabled = true;\r\n    /**\r\n     * この Mesh index 以降が読み込み対象\r\n     */\r\n    private meshesFrom = 0;\r\n    /**\r\n     * この TransformNode index 以降が読み込み対象\r\n     */\r\n    private transformNodesFrom = 0;\r\n    /**\r\n     * この Material index 以降が読み込み対象\r\n     */\r\n    private materialsFrom = 0;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public constructor(\r\n        private loader: GLTFLoader,\r\n    ) {\r\n        // GLTFLoader has already added rootMesh as __root__ before load extension\r\n        // @see glTFLoader._loadData\r\n        this.meshesFrom = this.loader.babylonScene.meshes.length - 1;\r\n        this.transformNodesFrom = this.loader.babylonScene.transformNodes.length;\r\n        this.materialsFrom = this.loader.babylonScene.materials.length;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public dispose(): void {\r\n        (this.loader as any) = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public onReady() {\r\n        if (!this.loader.gltf.extensions || !this.loader.gltf.extensions[NAME]) {\r\n            return;\r\n        }\r\n        const scene = this.loader.babylonScene;\r\n        const manager = new VRMManager(\r\n            this.loader.gltf.extensions[NAME],\r\n            this.loader.babylonScene,\r\n            this.meshesFrom,\r\n            this.transformNodesFrom,\r\n            this.materialsFrom,\r\n        );\r\n        scene.metadata = scene.metadata || {};\r\n        scene.metadata.vrmManagers = scene.metadata.vrmManagers || [];\r\n        scene.metadata.vrmManagers.push(manager);\r\n        this.loader.babylonScene.onDisposeObservable.add(() => {\r\n            // Scene dispose 時に Manager も破棄する\r\n            manager.dispose();\r\n            this.loader.babylonScene.metadata.vrmManagers = [];\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public _loadVertexDataAsync(\r\n        context: string,\r\n        primitive: IMeshPrimitive,\r\n        babylonMesh: Mesh,\r\n    ) {\r\n        if (!primitive.extras || !primitive.extras.targetNames) {\r\n            return null;\r\n        }\r\n        // まだ MorphTarget が生成されていないので、メタ情報にモーフターゲット情報を入れておく\r\n        babylonMesh.metadata = babylonMesh.metadata || {};\r\n        babylonMesh.metadata.vrmTargetNames = primitive.extras.targetNames;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public _loadMaterialAsync(\r\n        context: string,\r\n        material: IMaterial,\r\n        mesh: Mesh,\r\n        babylonDrawMode: number,\r\n        assign: (babylonMaterial: Material) => void,\r\n    ): Nullable<Promise<Material>> {\r\n        // ジェネレータでマテリアルを生成する\r\n        return (new VRMMaterialGenerator(this.loader)).generate(context, material, mesh, babylonDrawMode, assign);\r\n    }\r\n}\r\n\r\n// ローダーに登録する\r\nGLTFLoader.RegisterExtension(NAME, (loader) => new VRM(loader));\r\n","import { SceneLoader } from '@babylonjs/core/Loading/sceneLoader';\r\nimport { GLTFFileLoader } from '@babylonjs/loaders/glTF/glTFFileLoader';\r\n\r\n/**\r\n * VRM/VCI ファイルを読み込めるようにする\r\n * 拡張子を変更しただけ\r\n */\r\nexport class VRMFileLoader extends GLTFFileLoader {\r\n    public name = 'vrm';\r\n    public extensions = {\r\n        '.vrm': { isBinary: true },\r\n        '.vci': { isBinary: true },\r\n    };\r\n\r\n    public createPlugin() {\r\n        return new VRMFileLoader();\r\n    }\r\n}\r\n\r\nif (SceneLoader) {\r\n    SceneLoader.RegisterPlugin(new VRMFileLoader());\r\n}\r\n","export interface IVRMVector3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\n/**\r\n * extensions.VRM\r\n */\r\nexport interface IVRM {\r\n    exporterVersion: string;\r\n    specVersion: string;\r\n    meta: IVRMMeta;\r\n    humanoid: IVRMHumanoid;\r\n    firstPerson: IVRMFirstPerson;\r\n    blendShapeMaster: IVRMBlendShapeMaster;\r\n    secondaryAnimation: IVRMSecondaryAnimation;\r\n    materialProperties: IVRMMaterialProperty[];\r\n}\r\n\r\n/**\r\n * extensions.VRM.meta\r\n */\r\nexport interface IVRMMeta {\r\n    title: string;\r\n    version: string;\r\n    author: string;\r\n    contactInformation?: string;\r\n    reference?: string;\r\n    texture?: number;\r\n}\r\n\r\n/**\r\n * extensions.VRM.humanoid\r\n */\r\nexport interface IVRMHumanoid {\r\n    humanBones: IVRMHumanoidBone[];\r\n    armStretch?: number;\r\n    legStretch?: number;\r\n    upperArmTwist?: number;\r\n    lowerArmTwist?: number;\r\n    upperLegTwist?: number;\r\n    lowerLegTwist?: number;\r\n    feetSpacing?: number;\r\n    hasTranslationDoF?: boolean;\r\n}\r\n\r\nexport interface IVRMHumanoidBone {\r\n    bone: string;\r\n    node: number;\r\n    useDefaultValues: boolean;\r\n    min?: IVRMVector3;\r\n    max?: IVRMVector3;\r\n    center?: IVRMVector3;\r\n    axisLength?: number;\r\n}\r\n\r\nexport interface IVRMFirstPersonMeshAnnotation {\r\n    mesh: number;\r\n    firstPersonFlag: string;\r\n}\r\n\r\nexport interface IVRMFirstPersonDegreeMap {\r\n    curve: number[];\r\n    xRange: number;\r\n    yRange: number;\r\n}\r\n\r\n/**\r\n * extensions.VRM.firstPerson\r\n */\r\nexport interface IVRMFirstPerson {\r\n    firstPersonBone: number;\r\n    firstPersonBoneOffset: IVRMVector3;\r\n    meshAnnotations: IVRMFirstPersonMeshAnnotation[];\r\n    lookAtTypeName: 'Bone' | 'BlendShape';\r\n    lookAtHorizontalInner: IVRMFirstPersonDegreeMap;\r\n    lookAtHorizontalOuter: IVRMFirstPersonDegreeMap;\r\n    lookAtVerticalDown: IVRMFirstPersonDegreeMap;\r\n    lookAtVerticalUp: IVRMFirstPersonDegreeMap;\r\n}\r\n\r\n/**\r\n * extensions.VRM.blendShapeMaster\r\n */\r\nexport interface IVRMBlendShapeMaster {\r\n    blendShapeGroups: IVRMBlendShapeGroup[];\r\n}\r\n\r\nexport interface IVRMBlendShapeGroup {\r\n    name: string;\r\n    presetName: string;\r\n    binds: IVRMBlendShapeBind[];\r\n    materialValues: IVRMBlendShapeMaterialBind[];\r\n    isBinary: boolean;\r\n}\r\n\r\nexport interface IVRMBlendShapeBind {\r\n    mesh: number;\r\n    index: number;\r\n    weight: number;\r\n}\r\n\r\nexport interface IVRMBlendShapeMaterialBind {\r\n    materialName: string;\r\n    propertyName: string;\r\n    targetValue: number[];\r\n}\r\n\r\nexport interface IVRMSecondaryAnimationSpring {\r\n    comment: string;\r\n    stiffiness: number;\r\n    gravityPower: number;\r\n    gravityDir: IVRMVector3;\r\n    dragForce: number;\r\n    center: number;\r\n    hitRadius: number;\r\n    bones: number[];\r\n    colliderGroups: number[];\r\n}\r\n\r\nexport interface IVRMSecondaryAnimationCollider {\r\n    offset: IVRMVector3;\r\n    radius: number;\r\n}\r\n\r\nexport interface IVRMSecondaryAnimationColliderGroup {\r\n    node: number;\r\n    colliders: IVRMSecondaryAnimationCollider[];\r\n}\r\n\r\n/**\r\n * extensions.VRM.secondaryAnimation\r\n */\r\nexport interface IVRMSecondaryAnimation {\r\n    boneGroups: IVRMSecondaryAnimationSpring[];\r\n    colliderGroups: IVRMSecondaryAnimationColliderGroup[];\r\n}\r\n\r\nexport enum IVRMMaterialPropertyShader {\r\n    VRM_USE_GLTFSHADER = 'VRM_USE_GLTFSHADER',\r\n    VRMMToon = 'VRM/MToon',\r\n    VRMUnlitTransparentZWrite = 'VRM/UnlitTransparentZWrite',\r\n}\r\n\r\nexport interface IVRMMaterialPropertyFloatProperties {\r\n    _Cutoff?: number;\r\n    _BumpScale?: number;\r\n    _ReceiveShadowRate?: number;\r\n    _ShadingGradeRate?: number;\r\n    _ShadeShift?: number;\r\n    _ShadeToony?: number;\r\n    _LightColorAttenuation?: number;\r\n    _IndirectLightIntensity?: number;\r\n    _RimLightingMix?: number;\r\n    _RimFresnelPower?: number;\r\n    _RimLift?: number;\r\n    _OutlineWidth?: number;\r\n    _OutlineScaledMaxDistance?: number;\r\n    _OutlineLightingMix?: number;\r\n    _UvAnimScrollX?: number;\r\n    _UvAnimScrollY?: number;\r\n    _UvAnimRotation?: number;\r\n    _DebugMode?: number;\r\n    _BlendMode?: number;\r\n    _OutlineWidthMode?: number;\r\n    _OutlineColorMode?: number;\r\n    _CullMode?: number;\r\n    _OutlineCullMode?: number;\r\n    _SrcBlend?: number;\r\n    _DstBlend?: number;\r\n    _ZWrite?: number;\r\n    [prop: string]: number | undefined;\r\n}\r\n\r\nexport type IVRMVectorMaterialProperty = [number, number, number, number];\r\n\r\nexport interface IVRMMaterialPropertyVectorProperties {\r\n    _Color?: IVRMVectorMaterialProperty;\r\n    _ShadeColor?: IVRMVectorMaterialProperty;\r\n    _MainTex?: IVRMVectorMaterialProperty;\r\n    _ShadeTexture?: IVRMVectorMaterialProperty;\r\n    _BumpMap?: IVRMVectorMaterialProperty;\r\n    _ReceiveShadowTexture?: IVRMVectorMaterialProperty;\r\n    _ShadingGradeTexture?: IVRMVectorMaterialProperty;\r\n    _RimColor?: IVRMVectorMaterialProperty;\r\n    _RimTexture?: IVRMVectorMaterialProperty;\r\n    _SphereAdd?: IVRMVectorMaterialProperty;\r\n    _EmissionColor?: IVRMVectorMaterialProperty;\r\n    _EmissionMap?: IVRMVectorMaterialProperty;\r\n    _OutlineWidthTexture?: IVRMVectorMaterialProperty;\r\n    _OutlineColor?: IVRMVectorMaterialProperty;\r\n    _UvAnimMaskTexture?: IVRMVectorMaterialProperty;\r\n    [prop: string]: IVRMVectorMaterialProperty | undefined;\r\n}\r\n\r\nexport interface IVRMMaterialPropertyTextureProperties {\r\n    _MainTex?: number;\r\n    _ShadeTexture?: number;\r\n    _BumpMap?: number;\r\n    _ReceiveShadowTexture?: number;\r\n    _ShadingGradeTexture?: number;\r\n    _RimTexture?: number;\r\n    _SphereAdd?: number;\r\n    _EmissionMap?: number;\r\n    _OutlineWidthTexture?: number;\r\n    _UvAnimMaskTexture?: number;\r\n    [prop: string]: number | undefined;\r\n}\r\n\r\nexport interface IVRMMaterialPropertyKeywordMap {\r\n    _NORMALMAP?: boolean;\r\n    _ALPHATEST_ON?: boolean;\r\n    _ALPHABLEND_ON?: boolean;\r\n    _ALPHAPREMULTIPLY_ON?: boolean;\r\n}\r\n\r\nexport interface IVRMMaterialPropertyTagMap {\r\n    RenderType?: 'Opaque' | 'TransparentCutout' | 'Transparent';\r\n}\r\n\r\n/**\r\n * extensions.VRM.materialProperties\r\n */\r\nexport interface IVRMMaterialProperty {\r\n    name: string;\r\n    shader: IVRMMaterialPropertyShader;\r\n    renderQueue: number;\r\n    floatProperties: IVRMMaterialPropertyFloatProperties;\r\n    vectorProperties: IVRMMaterialPropertyVectorProperties;\r\n    textureProperties: IVRMMaterialPropertyTextureProperties;\r\n    keywordMap: IVRMMaterialPropertyKeywordMap;\r\n    tagMap: IVRMMaterialPropertyTagMap;\r\n}\r\n","import { Vector3 } from '@babylonjs/core/Maths/math';\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\nimport { MorphTarget } from '@babylonjs/core/Morph/morphTarget';\r\nimport { Scene } from '@babylonjs/core/scene';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { SpringBoneController } from './secondary-animation/spring-bone-controller';\r\nimport { HumanoidBone } from './humanoid-bone';\r\nimport { IVRM } from './vrm-interfaces';\r\nimport { MaterialValueBindingMerger } from './material-value-binding-merger';\r\n\r\ninterface IsBinaryMap {\r\n    [morphName: string]: boolean;\r\n}\r\n\r\ninterface MorphTargetSetting {\r\n    target: MorphTarget;\r\n    weight: number;\r\n}\r\n\r\ninterface MorphTargetMap {\r\n    [morphName: string]: MorphTargetSetting[];\r\n}\r\n\r\ninterface MaterialValueBindingMergerMap {\r\n    [morphName: string]: MaterialValueBindingMerger;\r\n}\r\n\r\ninterface TransformNodeMap {\r\n    [humanBoneName: string]: TransformNode;\r\n}\r\n\r\ninterface TransformNodeCache {\r\n    [nodeIndex: number]: TransformNode;\r\n}\r\n\r\ninterface MeshCache {\r\n    [meshIndex: number]: Mesh[];\r\n}\r\n\r\n/**\r\n * Unity Humanoid Bone 名\r\n */\r\nexport type HumanBoneName = 'hips' | 'leftUpperLeg' | 'rightUpperLeg' | 'leftLowerLeg' | 'rightLowerLeg' | 'leftFoot' | 'rightFoot' | 'spine' | 'chest' | 'neck' | 'head' | 'leftShoulder' | 'rightShoulder' | 'leftUpperArm' | 'rightUpperArm' | 'leftLowerArm' | 'rightLowerArm' | 'leftHand' | 'rightHand' | 'leftToes' | 'rightToes' | 'leftEye' | 'rightEye' | 'jaw' | 'leftThumbProximal' | 'leftThumbIntermediate' | 'leftThumbDistal' | 'leftIndexProximal' | 'leftIndexIntermediate' | 'leftIndexDistal' | 'leftMiddleProximal' | 'leftMiddleIntermediate' | 'leftMiddleDistal' | 'leftRingProximal' | 'leftRingIntermediate' | 'leftRingDistal' | 'leftLittleProximal' | 'leftLittleIntermediate' | 'leftLittleDistal' | 'rightThumbProximal' | 'rightThumbIntermediate' | 'rightThumbDistal' | 'rightIndexProximal' | 'rightIndexIntermediate' | 'rightIndexDistal' | 'rightMiddleProximal' | 'rightMiddleIntermediate' | 'rightMiddleDistal' | 'rightRingProximal' | 'rightRingIntermediate' | 'rightRingDistal' | 'rightLittleProximal' | 'rightLittleIntermediate' | 'rightLittleDistal' | 'upperChest' | string;\r\n\r\n/**\r\n * VRM キャラクターを動作させるためのマネージャ\r\n */\r\nexport class VRMManager {\r\n    private isBinaryMorphMap: IsBinaryMap = {};\r\n    private morphTargetMap: MorphTargetMap = {};\r\n    private materialValueBindingMergerMap: MaterialValueBindingMergerMap = {};\r\n    private presetMorphTargetMap: MorphTargetMap = {};\r\n    private transformNodeMap: TransformNodeMap = {};\r\n    private transformNodeCache: TransformNodeCache = {};\r\n    private meshCache: MeshCache = {};\r\n    private _humanoidBone: HumanoidBone;\r\n    private _rootMesh: Mesh;\r\n\r\n    /**\r\n     * Secondary Animation として定義されている VRM Spring Bone のコントローラ\r\n     */\r\n    public readonly springBoneController: SpringBoneController;\r\n\r\n    /**\r\n     *\r\n     * @param ext glTF.extensions.VRM の中身 json\r\n     * @param scene\r\n     * @param meshesFrom この番号以降のメッシュがこの VRM に該当する\r\n     * @param transformNodesFrom この番号以降の TransformNode がこの VRM に該当する\r\n     * @param materialsNodesFrom この番号以降の Material がこの VRM に該当する\r\n     */\r\n    public constructor(\r\n        public readonly ext: IVRM,\r\n        public readonly scene: Scene,\r\n        private readonly meshesFrom: number,\r\n        private readonly transformNodesFrom: number,\r\n        private readonly materialsNodesFrom: number,\r\n    ) {\r\n        this.meshCache = this.constructMeshCache();\r\n        this.transformNodeCache = this.constructTransformNodeCache();\r\n        this.springBoneController = new SpringBoneController(\r\n            this.ext.secondaryAnimation,\r\n            this.findTransformNode.bind(this),\r\n        );\r\n\r\n        if (this.ext.blendShapeMaster && this.ext.blendShapeMaster.blendShapeGroups) {\r\n            this.constructIsBinaryMap();\r\n            this.constructMorphTargetMap();\r\n            this.constructMaterialValueBindingMergerMap();\r\n        }\r\n        this.constructTransformNodeMap();\r\n\r\n        this._humanoidBone = new HumanoidBone(this.transformNodeMap);\r\n    }\r\n\r\n    /**\r\n     * Secondary Animation を更新する\r\n     *\r\n     * @param deltaTime 前フレームからの経過秒数(sec)\r\n     */\r\n    public async update(deltaTime: number): Promise<void> {\r\n        await this.springBoneController.update(deltaTime);\r\n    }\r\n\r\n    /**\r\n     * 破棄処理\r\n     */\r\n    public dispose(): void {\r\n        this.springBoneController.dispose();\r\n        this._humanoidBone.dispose();\r\n\r\n        (this.morphTargetMap as any) = null;\r\n        (this.materialValueBindingMergerMap as any) = null;\r\n        (this.presetMorphTargetMap as any) = null;\r\n        (this.transformNodeMap as any) = null;\r\n        (this.transformNodeCache as any) = null;\r\n        (this.meshCache as any) = null;\r\n        (this._rootMesh as any) = null;\r\n    }\r\n\r\n    /**\r\n     * モーフィングを行う\r\n     * @param label モーフ名\r\n     * @param value 値(0〜1)\r\n     */\r\n    public morphing(label: string, value: number): void {\r\n        const v = this.calcMorphValue(label, value);\r\n        if (this.morphTargetMap[label]) {\r\n            this.morphTargetMap[label].forEach((setting) => {\r\n                setting.target.influence = v * (setting.weight / 100);\r\n            });\r\n        }\r\n        if (this.materialValueBindingMergerMap[label]) {\r\n            this.materialValueBindingMergerMap[label].morphing(v);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * プリセットモーフのモーフィングを行う\r\n     * @param label モーフ名\r\n     * @param value 値(0〜1)\r\n     */\r\n    public morphingPreset(label: string, value: number): void {\r\n        if (!this.presetMorphTargetMap[label]) {\r\n            return;\r\n        }\r\n        const v = this.calcMorphValue(label, value);\r\n        this.presetMorphTargetMap[label].forEach((setting) => {\r\n            setting.target.influence = v * (setting.weight / 100);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * モーフィング用の値を計算する\r\n     * @param label モーフ名\r\n     * @param value 値\r\n     */\r\n    private calcMorphValue(label: string, value: number): number {\r\n        const v = Math.max(0.0, Math.min(1.0, value));\r\n        if (this.isBinaryMorphMap[label]) {\r\n            return v > 0.5 ? 1.0 : 0.0;\r\n        }\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * list morphing name\r\n     */\r\n    public getMorphingList(): string[] {\r\n        return Object.keys(this.morphTargetMap);\r\n    }\r\n\r\n    /**\r\n     * 一人称時のカメラ位置を絶対座標として取得する\r\n     *\r\n     * firstPersonBone が未設定の場合は null を返す\r\n     *\r\n     * @returns 一人称時のカメラの現在における絶対座標\r\n     */\r\n    public getFirstPersonCameraPosition(): Nullable<Vector3> {\r\n        const firstPersonBone = this.getFirstPersonBone();\r\n        if (!firstPersonBone) {\r\n            return null;\r\n        }\r\n\r\n        let basePos = firstPersonBone.getAbsolutePosition();\r\n        const offsetPos = this.ext.firstPerson.firstPersonBoneOffset;\r\n        return new Vector3(\r\n            basePos.x + offsetPos.x,\r\n            basePos.y + offsetPos.y,\r\n            basePos.z + offsetPos.z,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 一人称時に頭とみなす TransformNode を取得する\r\n     */\r\n    public getFirstPersonBone(): Nullable<TransformNode> {\r\n        return this.findTransformNode(this.ext.firstPerson.firstPersonBone);\r\n    }\r\n\r\n    /**\r\n     * ボーン名からそのボーンに該当する TransformNode を取得する\r\n     *\r\n     * @param name HumanBoneName\r\n     * @deprecated Use humanoidBone getter instead. This method will delete at v2.\r\n     */\r\n    public getBone(name: HumanBoneName): Nullable<TransformNode> {\r\n        return this.transformNodeMap[name] || null;\r\n    }\r\n\r\n    /**\r\n     * Get HumanoidBone Methods\r\n     */\r\n    public get humanoidBone(): HumanoidBone {\r\n        return this._humanoidBone;\r\n    }\r\n\r\n    /**\r\n     * VRM Root mesh\r\n     *\r\n     * Useful for Model Transformation\r\n     */\r\n    public get rootMesh(): Mesh {\r\n        return this._rootMesh;\r\n    }\r\n\r\n    /**\r\n     * node 番号から該当する TransformNode を探す\r\n     * 数が多くなるのでキャッシュに参照を持つ構造にする\r\n     * gltf の node 番号は `metadata.gltf.pointers` に記録されている\r\n     * @param nodeIndex\r\n     */\r\n    public findTransformNode(nodeIndex: number): Nullable<TransformNode> {\r\n        return this.transformNodeCache[nodeIndex] || null;\r\n    }\r\n\r\n    /**\r\n     * mesh 番号からメッシュを探す\r\n     * gltf の mesh 番号は `metadata.gltf.pointers` に記録されている\r\n     * @deprecated Use findMeshes instead. This method has broken.\r\n     */\r\n    public findMesh(meshIndex: number): Nullable<Mesh> {\r\n        return this.meshCache[meshIndex] && this.meshCache[meshIndex][0] || null;\r\n    }\r\n\r\n    /**\r\n     * mesh 番号からメッシュを探す\r\n     * gltf の mesh 番号は `metadata.gltf.pointers` に記録されている\r\n     */\r\n    public findMeshes(meshIndex: number): Nullable<Mesh[]> {\r\n        return this.meshCache[meshIndex] || null;\r\n    }\r\n\r\n    /**\r\n     * 事前に MorphTarget と isBinary を紐付ける\r\n     */\r\n    private constructIsBinaryMap(): void {\r\n        this.ext.blendShapeMaster.blendShapeGroups.forEach((g) => {\r\n            this.isBinaryMorphMap[g.name] = g.isBinary;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 事前に MorphTarget と BlendShape を紐付ける\r\n     */\r\n    private constructMorphTargetMap(): void {\r\n        this.ext.blendShapeMaster.blendShapeGroups.forEach((g) => {\r\n            if (!g.binds) {\r\n                return;\r\n            }\r\n            g.binds.forEach((b) => {\r\n                const meshes = this.findMeshes(b.mesh);\r\n                if (!meshes) {\r\n                    console.log(`Undefined BlendShapeBind Mesh`, b);\r\n                    return;\r\n                }\r\n                meshes.forEach((mesh) => {\r\n                    const morphTargetManager = mesh.morphTargetManager;\r\n                    if (!morphTargetManager) {\r\n                        console.log(`Undefined morphTargetManager`, b);\r\n                        return;\r\n                    }\r\n                    const target = morphTargetManager.getTarget(b.index);\r\n                    this.morphTargetMap[g.name] = this.morphTargetMap[g.name] || [];\r\n                    this.morphTargetMap[g.name].push({\r\n                        target,\r\n                        weight: b.weight,\r\n                    });\r\n                    if (g.presetName) {\r\n                        this.presetMorphTargetMap[g.presetName] = this.presetMorphTargetMap[g.presetName] || [];\r\n                        this.presetMorphTargetMap[g.presetName].push({\r\n                            target,\r\n                            weight: b.weight,\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 事前に MaterialValueBindingMerger とモーフ名を紐付ける\r\n     */\r\n    private constructMaterialValueBindingMergerMap() {\r\n        const materials = this.scene.materials.slice(this.materialsNodesFrom);\r\n        this.ext.blendShapeMaster.blendShapeGroups.forEach((g) => {\r\n            if (!g.materialValues) {\r\n                return;\r\n            }\r\n            this.materialValueBindingMergerMap[g.name] = new MaterialValueBindingMerger(\r\n                materials,\r\n                g.materialValues\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 事前に TransformNode と bone 名を紐づける\r\n     */\r\n    private constructTransformNodeMap() {\r\n        this.ext.humanoid.humanBones.forEach((b) => {\r\n            const node = this.findTransformNode(b.node);\r\n            if (!node) {\r\n                return;\r\n            }\r\n            this.transformNodeMap[b.bone] = node;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * node 番号と TransformNode を紐づける\r\n     */\r\n    private constructTransformNodeCache() {\r\n        const cache: TransformNodeCache = {};\r\n        for (let index = this.transformNodesFrom; index < this.scene.transformNodes.length; index++) {\r\n            const node = this.scene.transformNodes[index];\r\n            // ポインタが登録されていないものは省略\r\n            if (!node || !node.metadata || !node.metadata.gltf || !node.metadata.gltf.pointers || node.metadata.gltf.pointers.length === 0) {\r\n                continue;\r\n            }\r\n            for (const pointer of node.metadata.gltf.pointers) {\r\n                if (pointer.startsWith('/nodes/')) {\r\n                    const nodeIndex = parseInt((pointer as string).substr(7), 10);\r\n                    cache[nodeIndex] = node;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cache;\r\n    }\r\n\r\n    /**\r\n     * mesh 番号と Mesh を紐づける\r\n     */\r\n    private constructMeshCache() {\r\n        const cache: MeshCache = {};\r\n        for (let index = this.meshesFrom; index < this.scene.meshes.length; index++) {\r\n            const mesh = this.scene.meshes[index];\r\n            if (mesh.id === '__root__') {\r\n                this._rootMesh = mesh as Mesh;\r\n                continue;\r\n            }\r\n            // ポインタが登録されていないものは省略\r\n            if (!mesh || !mesh.metadata || !mesh.metadata.gltf || !mesh.metadata.gltf.pointers || mesh.metadata.gltf.pointers.length === 0) {\r\n                continue;\r\n            }\r\n            for (const pointer of mesh.metadata.gltf.pointers) {\r\n                const match = (pointer as string).match(/^\\/meshes\\/(\\d+).+$/);\r\n                if (match) {\r\n                    const nodeIndex = parseInt(match[1], 10);\r\n                    cache[nodeIndex] = cache[nodeIndex] || [];\r\n                    cache[nodeIndex].push(mesh as Mesh);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cache;\r\n    }\r\n}\r\n","import { Material } from '@babylonjs/core/Materials/material';\r\nimport { BaseTexture } from '@babylonjs/core/Materials/Textures/baseTexture';\r\nimport { Texture } from '@babylonjs/core/Materials/Textures/texture';\r\nimport { Color3 } from '@babylonjs/core/Maths/math';\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { GLTFLoader, IMaterial } from '@babylonjs/loaders/glTF/2.0';\r\nimport { MToonMaterial } from 'babylon-mtoon-material';\r\nimport { IVRMMaterialProperty, IVRMMaterialPropertyShader, IVRMVectorMaterialProperty } from './vrm-interfaces';\r\nimport { Engine } from '@babylonjs/core/Engines/engine';\r\n\r\n/**\r\n * VRM で指定される Material を生成する\r\n * [VRM が提供するシェーダ](https://vrm.dev/vrm_spec/#vrm%E3%81%8C%E6%8F%90%E4%BE%9B%E3%81%99%E3%82%8B%E3%82%B7%E3%82%A7%E3%83%BC%E3%83%80%E3%83%BC) を特定し読み込む\r\n * - UnlitTexture: 不透明, VRM ファイル側で [KHR_materials_unlit](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit/) が定義されているため、何もしない\r\n * - UnlitCutout: 透明度が閾値以下の部分を透明とする, 同上\r\n * - UnlitTransparent: アルファブレンド。ZWriteしない, 同上\r\n * - UnlitTransparentZWrite: アルファブレンド。ZWriteする, 同上に加え、プロパティで ZWrite を強制しています\r\n * - MToon: MToonMaterial を差し替えています。\r\n */\r\nexport class VRMMaterialGenerator {\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public constructor(\r\n        private readonly loader: GLTFLoader,\r\n    ) {}\r\n\r\n    /**\r\n     * マテリアルを生成する Promise を返す\r\n     * VRM 対象外の場合は null\r\n     */\r\n    public generate(\r\n        context: string,\r\n        material: IMaterial,\r\n        mesh: Mesh,\r\n        babylonDrawMode: number,\r\n        assign: (babylonMaterial: Material) => void,\r\n    ): Nullable<Promise<Material>> {\r\n        const materialProp = this.findMaterialPropertyByName(\r\n            material.name,\r\n            this.getMaterialProperties(),\r\n        );\r\n        if (!materialProp) {\r\n            return null;\r\n        }\r\n        mesh.alphaIndex = materialProp.renderQueue;\r\n        const newMaterial = this.createMaterialByShader(context, material, babylonDrawMode, materialProp);\r\n        if (!newMaterial) {\r\n            return null;\r\n        }\r\n        assign(newMaterial);\r\n        if (newMaterial instanceof MToonMaterial) {\r\n            return this.loadMToonTexturesAsync(context, newMaterial, materialProp);\r\n        }\r\n        return Promise.resolve(newMaterial);\r\n    }\r\n\r\n    /**\r\n     * VRM または VCI からマテリアルプロパティの配列を探す\r\n     */\r\n    private getMaterialProperties(): IVRMMaterialProperty[] {\r\n        if (!this.loader.gltf.extensions) {\r\n            return [];\r\n        }\r\n        if (this.loader.gltf.extensions.VRM && this.loader.gltf.extensions.VRM.materialProperties) {\r\n            return this.loader.gltf.extensions.VRM.materialProperties;\r\n        }\r\n        if (this.loader.gltf.extensions.VCAST_vci_material_unity && this.loader.gltf.extensions.VCAST_vci_material_unity.materials) {\r\n            return this.loader.gltf.extensions.VCAST_vci_material_unity.materials;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * マテリアル名から MaterialProperty を探す\r\n     * @param materialName マテリアル名\r\n     * @param extension 拡張データ\r\n     */\r\n    private findMaterialPropertyByName(materialName: string | undefined, materials: IVRMMaterialProperty[]): Nullable<IVRMMaterialProperty> {\r\n        if (!materialName || !materials) {\r\n            return null;\r\n        }\r\n        const mats = materials.filter((v) => v.name === materialName);\r\n        if (mats.length === 0) {\r\n            return null;\r\n        } else if (mats.length >= 2) {\r\n            this.loader.log(`Duplicated vrm material name found: ${materialName}`);\r\n        }\r\n        return mats[mats.length - 1];\r\n    }\r\n\r\n    /**\r\n     * テクスチャを読み込む\r\n     * @param context 現在のコンテキスト\r\n     * @param material 生成した MToonMaterial\r\n     * @param prop 生成した MToonMaterial のマテリアルプロパティ\r\n     */\r\n    private loadMToonTexturesAsync(\r\n        context: string,\r\n        material: MToonMaterial,\r\n        prop: IVRMMaterialProperty,\r\n    ): Promise<Material> {\r\n        const promises: Array<Promise<BaseTexture>> = [];\r\n        // 全てのテクスチャの UV Offset & Scale はメインテクスチャのものを流用する\r\n        const uvOffsetScale = prop.vectorProperties._MainTex;\r\n        if (!uvOffsetScale) {\r\n            return Promise.resolve(material);\r\n        }\r\n        const applyTexture = (index: number | undefined, callback: (texture: BaseTexture) => void) => {\r\n            applyPropertyWhenDefined<number>(index, (value) => {\r\n                promises.push(this.loader.loadTextureInfoAsync(\r\n                    `${context}/textures/${index}`,\r\n                    { index: value },\r\n                    (babylonTexture: BaseTexture) => {\r\n                        // 実際は Texture インスタンスが来るのでキャスト\r\n                        const t = babylonTexture as Texture;\r\n                        t.uOffset = uvOffsetScale[0];\r\n                        t.vOffset = uvOffsetScale[1];\r\n                        t.uScale = uvOffsetScale[2];\r\n                        t.vScale = uvOffsetScale[3];\r\n                        callback(babylonTexture);\r\n                    },\r\n                ));\r\n            });\r\n        };\r\n\r\n        applyTexture(prop.textureProperties._MainTex, (texture) => {\r\n            if (material.alphaBlend || material.alphaTest) {\r\n                texture.hasAlpha = true;\r\n            }\r\n            material.diffuseTexture = texture;\r\n        });\r\n        applyTexture(prop.textureProperties._ShadeTexture, (texture) => material.shadeTexture = texture);\r\n        applyTexture(prop.textureProperties._BumpMap, (texture) => material.bumpTexture = texture);\r\n        applyTexture(prop.textureProperties._ReceiveShadowTexture, (texture) => material.receiveShadowTexture = texture);\r\n        applyTexture(prop.textureProperties._ShadingGradeTexture, (texture) => material.shadingGradeTexture = texture);\r\n        applyTexture(prop.textureProperties._RimTexture, (texture) => material.rimTexture = texture);\r\n        applyTexture(prop.textureProperties._SphereAdd, (texture) => material.matCapTexture = texture);\r\n        applyTexture(prop.textureProperties._EmissionMap, (texture) => material.emissiveTexture = texture);\r\n        applyTexture(prop.textureProperties._OutlineWidthTexture, (texture) => material.outlineWidthTexture = texture);\r\n        applyTexture(prop.textureProperties._UvAnimMaskTexture, (texture) => material.uvAnimationMaskTexture = texture);\r\n\r\n        return Promise.all(promises).then(() => material);\r\n    }\r\n\r\n    /**\r\n     * シェーダ名からマテリアルを推測して生成する\r\n     * @param context 現在のコンテキスト\r\n     * @param material glTF マテリアル\r\n     * @param babylonDrawMode 描画種類\r\n     * @param prop 生成するマテリアルプロパティ\r\n     */\r\n    private createMaterialByShader(\r\n        context: string,\r\n        material: IMaterial,\r\n        babylonDrawMode: number,\r\n        prop: IVRMMaterialProperty,\r\n    ): Nullable<Material> {\r\n        if (prop.shader === IVRMMaterialPropertyShader.VRMMToon) {\r\n            const mtoonMaterial = new MToonMaterial(\r\n                material.name || `MToonMaterial${material.index}`,\r\n                this.loader.babylonScene,\r\n            );\r\n            this.setMToonMaterialProperties(mtoonMaterial, prop);\r\n            return mtoonMaterial;\r\n        }\r\n        if (prop.shader === IVRMMaterialPropertyShader.VRMUnlitTransparentZWrite) {\r\n            const mat = this.loader.createMaterial(context, material, babylonDrawMode);\r\n            // 通常マテリアルに Depth Write を強制\r\n            mat.disableDepthWrite = false;\r\n            mat.forceDepthWrite = true;\r\n            return mat;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * マテリアルに VRM プロパティを設定\r\n     * VRM プロパティとマテリアルプロパティのマッピングを行っている\r\n     * 初期値はマテリアル実装側に持っているため、値がある場合のみ上書きする\r\n     */\r\n    private setMToonMaterialProperties(material: MToonMaterial, prop: IVRMMaterialProperty) {\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._Cutoff, (value) => material.alphaCutOff = value);\r\n        applyPropertyWhenDefined<IVRMVectorMaterialProperty>(prop.vectorProperties._Color, (value) => {\r\n            material.diffuseColor = new Color3(value[0], value[1], value[2]);\r\n            material.alpha = value[3];\r\n        });\r\n        applyPropertyWhenDefined<IVRMVectorMaterialProperty>(prop.vectorProperties._ShadeColor, (value) => {\r\n            material.shadeColor = new Color3(value[0], value[1], value[2]);\r\n        });\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._BumpScale, (value) => material.bumpScale = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._ReceiveShadowRate, (value) => material.receiveShadowRate = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._ShadingGradeRate, (value) => material.shadingGradeRate = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._ShadeShift, (value) => material.shadeShift = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._ShadeToony, (value) => material.shadeToony = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._LightColorAttenuation, (value) => material.lightColorAttenuation = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._IndirectLightIntensity, (value) => material.indirectLightIntensity = value);\r\n        applyPropertyWhenDefined<IVRMVectorMaterialProperty>(prop.vectorProperties._RimColor, (value) => {\r\n            material.rimColor = new Color3(value[0], value[1], value[2]);\r\n        });\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._RimLightingMix, (value) => material.rimLightingMix = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._RimFresnelPower, (value) => material.rimFresnelPower = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._RimLift, (value) => material.rimLift = value);\r\n        applyPropertyWhenDefined<IVRMVectorMaterialProperty>(prop.vectorProperties._EmissionColor, (value) => {\r\n            material.emissiveColor = new Color3(value[0], value[1], value[2]);\r\n        });\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._OutlineWidth, (value) => material.outlineWidth = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._OutlineScaledMaxDistance, (value) => material.outlineScaledMaxDistance = value);\r\n        applyPropertyWhenDefined<IVRMVectorMaterialProperty>(prop.vectorProperties._OutlineColor, (value) => {\r\n            material.outlineColor = new Color3(value[0], value[1], value[2]);\r\n        });\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._OutlineLightingMix, (value) => material.outlineLightingMix = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._UvAnimScrollX, (value) => material.uvAnimationScrollX = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._UvAnimScrollY, (value) => material.uvAnimationScrollY = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._UvAnimRotation, (value) => material.uvAnimationRotation = value);\r\n\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._DebugMode, (value) => material.debugMode = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._BlendMode, (value) => {\r\n            switch (value) {\r\n                case 0: // Opaque\r\n                    material.alphaBlend = false;\r\n                    material.alphaTest = false;\r\n                    break;\r\n                case 1: // TransparentCutout\r\n                    material.alphaBlend = false;\r\n                    material.alphaTest = true;\r\n                    material.alphaMode = Engine.ALPHA_COMBINE;\r\n                    break;\r\n                case 2: // Transparent\r\n                    material.alphaBlend = true;\r\n                    material.alphaTest = false;\r\n                    material.alphaMode = Engine.ALPHA_COMBINE;\r\n                    break;\r\n            }\r\n        });\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._OutlineWidthMode, (value) => material.outlineWidthMode = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._OutlineColorMode, (value) => material.outlineColorMode = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._CullMode, (value) => material.cullMode = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._OutlineCullMode, (value) => material.outlineCullMode = value);\r\n        applyPropertyWhenDefined<boolean>(prop.keywordMap._ALPHABLEND_ON, (value) => material.alphaBlend = value);\r\n        applyPropertyWhenDefined<boolean>(prop.keywordMap._ALPHATEST_ON, (value) => material.alphaTest = value);\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._ZWrite, (value) => {\r\n            material.forceDepthWrite = (Math.round(value) === 1);\r\n            if (material.forceDepthWrite) {\r\n                material.disableDepthWrite = false;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * プロパティが設定されていればコールバックを実行する\r\n */\r\nfunction applyPropertyWhenDefined<T>(prop: T | undefined, callback: (value: T) => void) {\r\n    if (typeof prop === 'undefined') {\r\n        return;\r\n    }\r\n    callback(prop);\r\n}\r\n"],"sourceRoot":""}