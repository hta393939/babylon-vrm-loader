{"version":3,"file":"main.js","mappings":"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AE;YACrE,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACnD,IAAI,QAAQ,CAAC,eAAe,EAAE;gBAC1B,QAAQ,CAAC,iBAAiB,GAAG,KAAK,CAAC;aACtC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAED;;GAEG;AACH,SAAS,wBAAwB,CAAI,IAAmB,EAAE,QAA4B;IAClF,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;QAC7B,OAAO;KACV;IACD,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnB,CAAC;;;;;;;UC3OD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEhDA;UACA;UACA;UACA;UACA","sources":["webpack://babylon-vrm-loader/webpack/universalModuleDefinition","webpack://babylon-vrm-loader/./src/errors.ts","webpack://babylon-vrm-loader/./src/humanoid-bone.ts","webpack://babylon-vrm-loader/./src/index.ts","webpack://babylon-vrm-loader/./src/material-value-binding-merger.ts","webpack://babylon-vrm-loader/./src/secondary-animation/collider-group.ts","webpack://babylon-vrm-loader/./src/secondary-animation/collider.ts","webpack://babylon-vrm-loader/./src/secondary-animation/spring-bone-controller.ts","webpack://babylon-vrm-loader/./src/secondary-animation/vrm-spring-bone-logic.ts","webpack://babylon-vrm-loader/./src/secondary-animation/vrm-spring-bone.ts","webpack://babylon-vrm-loader/./src/test/index.ts","webpack://babylon-vrm-loader/./src/vcast-vci-material-unity.ts","webpack://babylon-vrm-loader/./src/vrm-extension.ts","webpack://babylon-vrm-loader/./src/vrm-file-loader.ts","webpack://babylon-vrm-loader/./src/vrm-interfaces.ts","webpack://babylon-vrm-loader/./src/vrm-manager.ts","webpack://babylon-vrm-loader/./src/vrm-material-generator.ts","webpack://babylon-vrm-loader/webpack/bootstrap","webpack://babylon-vrm-loader/webpack/runtime/chunk loaded","webpack://babylon-vrm-loader/webpack/runtime/compat get default export","webpack://babylon-vrm-loader/webpack/runtime/define property getters","webpack://babylon-vrm-loader/webpack/runtime/global","webpack://babylon-vrm-loader/webpack/runtime/hasOwnProperty shorthand","webpack://babylon-vrm-loader/webpack/runtime/make namespace object","webpack://babylon-vrm-loader/webpack/runtime/jsonp chunk loading","webpack://babylon-vrm-loader/webpack/before-startup","webpack://babylon-vrm-loader/webpack/startup","webpack://babylon-vrm-loader/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylon-vrm-loader\"] = factory();\n\telse\n\t\troot[\"babylon-vrm-loader\"] = factory();\n})(self, () => {\nreturn ","/**\r\n * Throws when mandatory bone could not find\r\n */\r\nexport class BoneNotFoundError extends Error {\r\n    public readonly name = 'BoneNotFoundError';\r\n\r\n    public constructor(public readonly boneName: string) {\r\n        super(`Bone:${boneName} NotFound`);\r\n    }\r\n}\r\n","import type { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\nimport type { Nullable } from '@babylonjs/core/types';\r\nimport { BoneNotFoundError } from './errors';\r\n\r\ninterface TransformNodeMap {\r\n    [name: string]: TransformNode;\r\n}\r\n\r\n/**\r\n * HumanoidBone を取得するメソッド群\r\n * @see https://docs.unity3d.com/ja/2018.3/ScriptReference/HumanBodyBones.html\r\n */\r\nexport class HumanoidBone {\r\n    public constructor(private nodeMap: TransformNodeMap) {}\r\n\r\n    public dispose() {\r\n        (this.nodeMap as any) = null;\r\n    }\r\n\r\n    /**\r\n     * 尻\r\n     */\r\n    public get hips() {\r\n        return this.getMandatoryBone('hips');\r\n    }\r\n    /**\r\n     * 左太もも\r\n     */\r\n    public get leftUpperLeg() {\r\n        return this.getMandatoryBone('leftUpperLeg');\r\n    }\r\n    /**\r\n     * 右太もも\r\n     */\r\n    public get rightUpperLeg() {\r\n        return this.getMandatoryBone('rightUpperLeg');\r\n    }\r\n    /**\r\n     * 左ひざ\r\n     */\r\n    public get leftLowerLeg() {\r\n        return this.getMandatoryBone('leftLowerLeg');\r\n    }\r\n    /**\r\n     * 右ひざ\r\n     */\r\n    public get rightLowerLeg() {\r\n        return this.getMandatoryBone('rightLowerLeg');\r\n    }\r\n    /**\r\n     * 左足首\r\n     */\r\n    public get leftFoot() {\r\n        return this.getMandatoryBone('leftFoot');\r\n    }\r\n    /**\r\n     * 右足首\r\n     */\r\n    public get rightFoot() {\r\n        return this.getMandatoryBone('rightFoot');\r\n    }\r\n    /**\r\n     * 脊椎の第一\r\n     */\r\n    public get spine() {\r\n        return this.getMandatoryBone('spine');\r\n    }\r\n    /**\r\n     * 胸\r\n     */\r\n    public get chest() {\r\n        return this.getMandatoryBone('chest');\r\n    }\r\n    /**\r\n     * 首\r\n     */\r\n    public get neck() {\r\n        return this.getMandatoryBone('neck');\r\n    }\r\n    /**\r\n     * 頭\r\n     */\r\n    public get head() {\r\n        return this.getMandatoryBone('head');\r\n    }\r\n    /**\r\n     * 左肩\r\n     */\r\n    public get leftShoulder() {\r\n        return this.getMandatoryBone('leftShoulder');\r\n    }\r\n    /**\r\n     * 右肩\r\n     */\r\n    public get rightShoulder() {\r\n        return this.getMandatoryBone('rightShoulder');\r\n    }\r\n    /**\r\n     * 左上腕\r\n     */\r\n    public get leftUpperArm() {\r\n        return this.getMandatoryBone('leftUpperArm');\r\n    }\r\n    /**\r\n     * 右上腕\r\n     */\r\n    public get rightUpperArm() {\r\n        return this.getMandatoryBone('rightUpperArm');\r\n    }\r\n    /**\r\n     * 左ひじ\r\n     */\r\n    public get leftLowerArm() {\r\n        return this.getMandatoryBone('leftLowerArm');\r\n    }\r\n    /**\r\n     * 右ひじ\r\n     */\r\n    public get rightLowerArm() {\r\n        return this.getMandatoryBone('rightLowerArm');\r\n    }\r\n    /**\r\n     * 左手首\r\n     */\r\n    public get leftHand() {\r\n        return this.getMandatoryBone('leftHand');\r\n    }\r\n    /**\r\n     * 右手首\r\n     */\r\n    public get rightHand() {\r\n        return this.getMandatoryBone('rightHand');\r\n    }\r\n    /**\r\n     * 左つま先(Optional)\r\n     */\r\n    public get leftToes() {\r\n        return this.getOptionalBone('leftToes');\r\n    }\r\n    /**\r\n     * 右つま先(Optional)\r\n     */\r\n    public get rightToes() {\r\n        return this.getOptionalBone('rightToes');\r\n    }\r\n    /**\r\n     * 左目(Optional)\r\n     */\r\n    public get leftEye() {\r\n        return this.getOptionalBone('leftEye');\r\n    }\r\n    /**\r\n     * 右目(Optional)\r\n     */\r\n    public get rightEye() {\r\n        return this.getOptionalBone('rightEye');\r\n    }\r\n    /**\r\n     * 顎(Optional)\r\n     */\r\n    public get jaw() {\r\n        return this.getOptionalBone('jaw');\r\n    }\r\n    /**\r\n     * 左親指第一指骨(Optional)\r\n     */\r\n    public get leftThumbProximal() {\r\n        return this.getOptionalBone('leftThumbProximal');\r\n    }\r\n    /**\r\n     * 左親指第二指骨(Optional)\r\n     */\r\n    public get leftThumbIntermediate() {\r\n        return this.getOptionalBone('leftThumbIntermediate');\r\n    }\r\n    /**\r\n     * 左親指第三指骨(Optional)\r\n     */\r\n    public get leftThumbDistal() {\r\n        return this.getOptionalBone('leftThumbDistal');\r\n    }\r\n    /**\r\n     * 左人差し指第一指骨(Optional)\r\n     */\r\n    public get leftIndexProximal() {\r\n        return this.getOptionalBone('leftIndexProximal');\r\n    }\r\n    /**\r\n     * 左人差し指第二指骨(Optional)\r\n     */\r\n    public get leftIndexIntermediate() {\r\n        return this.getOptionalBone('leftIndexIntermediate');\r\n    }\r\n    /**\r\n     * 左人差し指第三指骨(Optional)\r\n     */\r\n    public get leftIndexDistal() {\r\n        return this.getOptionalBone('leftIndexDistal');\r\n    }\r\n    /**\r\n     * 左中指第一指骨(Optional)\r\n     */\r\n    public get leftMiddleProximal() {\r\n        return this.getOptionalBone('leftMiddleProximal');\r\n    }\r\n    /**\r\n     * 左中指第二指骨(Optional)\r\n     */\r\n    public get leftMiddleIntermediate() {\r\n        return this.getOptionalBone('leftMiddleIntermediate');\r\n    }\r\n    /**\r\n     * 左中指第三指骨(Optional)\r\n     */\r\n    public get leftMiddleDistal() {\r\n        return this.getOptionalBone('leftMiddleDistal');\r\n    }\r\n    /**\r\n     * 左薬指第一指骨(Optional)\r\n     */\r\n    public get leftRingProximal() {\r\n        return this.getOptionalBone('leftRingProximal');\r\n    }\r\n    /**\r\n     * 左薬指第二指骨(Optional)\r\n     */\r\n    public get leftRingIntermediate() {\r\n        return this.getOptionalBone('leftRingIntermediate');\r\n    }\r\n    /**\r\n     * 左薬指第三指骨(Optional)\r\n     */\r\n    public get leftRingDistal() {\r\n        return this.getOptionalBone('leftRingDistal');\r\n    }\r\n    /**\r\n     * 左小指第一指骨(Optional)\r\n     */\r\n    public get leftLittleProximal() {\r\n        return this.getOptionalBone('leftLittleProximal');\r\n    }\r\n    /**\r\n     * 左小指第二指骨(Optional)\r\n     */\r\n    public get leftLittleIntermediate() {\r\n        return this.getOptionalBone('leftLittleIntermediate');\r\n    }\r\n    /**\r\n     * 左小指第三指骨(Optional)\r\n     */\r\n    public get leftLittleDistal() {\r\n        return this.getOptionalBone('leftLittleDistal');\r\n    }\r\n    /**\r\n     * 右親指第一指骨(Optional)\r\n     */\r\n    public get rightThumbProximal() {\r\n        return this.getOptionalBone('rightThumbProximal');\r\n    }\r\n    /**\r\n     * 右親指第二指骨(Optional)\r\n     */\r\n    public get rightThumbIntermediate() {\r\n        return this.getOptionalBone('rightThumbIntermediate');\r\n    }\r\n    /**\r\n     * 右親指第三指骨(Optional)\r\n     */\r\n    public get rightThumbDistal() {\r\n        return this.getOptionalBone('rightThumbDistal');\r\n    }\r\n    /**\r\n     * 右人差し指第一指骨(Optional)\r\n     */\r\n    public get rightIndexProximal() {\r\n        return this.getOptionalBone('rightIndexProximal');\r\n    }\r\n    /**\r\n     * 右人差し指第二指骨(Optional)\r\n     */\r\n    public get rightIndexIntermediate() {\r\n        return this.getOptionalBone('rightIndexIntermediate');\r\n    }\r\n    /**\r\n     * 右人差し指第三指骨(Optional)\r\n     */\r\n    public get rightIndexDistal() {\r\n        return this.getOptionalBone('rightIndexDistal');\r\n    }\r\n    /**\r\n     * 右中指第一指骨(Optional)\r\n     */\r\n    public get rightMiddleProximal() {\r\n        return this.getOptionalBone('rightMiddleProximal');\r\n    }\r\n    /**\r\n     * 右中指第二指骨(Optional)\r\n     */\r\n    public get rightMiddleIntermediate() {\r\n        return this.getOptionalBone('rightMiddleIntermediate');\r\n    }\r\n    /**\r\n     * 右中指第三指骨(Optional)\r\n     */\r\n    public get rightMiddleDistal() {\r\n        return this.getOptionalBone('rightMiddleDistal');\r\n    }\r\n    /**\r\n     * 右薬指第一指骨(Optional)\r\n     */\r\n    public get rightRingProximal() {\r\n        return this.getOptionalBone('rightRingProximal');\r\n    }\r\n    /**\r\n     * 右薬指第二指骨(Optional)\r\n     */\r\n    public get rightRingIntermediate() {\r\n        return this.getOptionalBone('rightRingIntermediate');\r\n    }\r\n    /**\r\n     * 右薬指第三指骨(Optional)\r\n     */\r\n    public get rightRingDistal() {\r\n        return this.getOptionalBone('rightRingDistal');\r\n    }\r\n    /**\r\n     * 右小指第一指骨(Optional)\r\n     */\r\n    public get rightLittleProximal() {\r\n        return this.getOptionalBone('rightLittleProximal');\r\n    }\r\n    /**\r\n     * 右小指第二指骨(Optional)\r\n     */\r\n    public get rightLittleIntermediate() {\r\n        return this.getOptionalBone('rightLittleIntermediate');\r\n    }\r\n    /**\r\n     * 右小指第三指骨(Optional)\r\n     */\r\n    public get rightLittleDistal() {\r\n        return this.getOptionalBone('rightLittleDistal');\r\n    }\r\n    /**\r\n     * 上胸(Optional)\r\n     */\r\n    public get upperChest() {\r\n        return this.getOptionalBone('upperChest');\r\n    }\r\n\r\n    /**\r\n     * 必須ボーンを取得する。取得出来ない場合は例外を発生する\r\n     *\r\n     * @throws BoneNotFoundError\r\n     * @param name HumanoidBoneName\r\n     */\r\n    private getMandatoryBone(name: string): TransformNode {\r\n        const node = this.nodeMap[name];\r\n        if (!node) {\r\n            throw new BoneNotFoundError(name);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * オプショナルボーンを取得する\r\n     *\r\n     * @param name HumanoidBoneName\r\n     */\r\n    private getOptionalBone(name: string): Nullable<TransformNode> {\r\n        return (this.nodeMap && this.nodeMap[name]) || null;\r\n    }\r\n}\r\n","export * from './errors';\r\nexport * from './humanoid-bone';\r\nexport * from './material-value-binding-merger';\r\nexport * from './vcast-vci-material-unity';\r\nexport * from './vci-interfaces';\r\nexport * from './vrm-extension';\r\nexport * from './vrm-file-loader';\r\nexport * from './vrm-interfaces';\r\nexport * from './vrm-manager';\r\nexport * from './vrm-material-generator';\r\n","import type { Color3 } from '@babylonjs/core/Maths/math';\r\nimport { Vector4 } from '@babylonjs/core/Maths/math';\r\nimport type { Material, BaseTexture, Texture, Nullable } from '@babylonjs/core';\r\nimport { PBRMaterial } from '@babylonjs/core';\r\nimport type { IVRMBlendShapeMaterialBind } from './vrm-interfaces';\r\nimport { MToonMaterial } from 'babylon-mtoon-material';\r\n\r\ntype SupportedMaterial = MToonMaterial | PBRMaterial;\r\n\r\n/**\r\n * firstValue は false 固定だが、 UniVRM に倣って定義している\r\n */\r\ntype Setter = (value: number, firstValue: boolean) => void;\r\n\r\nconst PBRMaterialTextureMap: { [propertyName: string]: keyof PBRMaterial } = {\r\n    _MainTex: 'albedoTexture',\r\n};\r\n\r\nconst PBRMaterialColorMap: { [propertyName: string]: keyof PBRMaterial } = {\r\n    _Color: 'albedoColor',\r\n};\r\n\r\nconst MToonMaterialTextureMap: { [propertyName: string]: keyof MToonMaterial } = {\r\n    _MainTex: 'diffuseTexture',\r\n    _EmissionMap: 'emissiveTexture',\r\n    _BumpMap: 'bumpTexture',\r\n    _ShadeTexture: 'shadeTexture',\r\n    _ReceiveShadowTexture: 'receiveShadowTexture',\r\n    _ShadingGradeTexture: 'shadingGradeTexture',\r\n    _RimTexture: 'rimTexture',\r\n    _SphereAdd: 'matCapTexture',\r\n    _OutlineWidthTexture: 'outlineWidthTexture',\r\n    _UvAnimMaskTexture: 'uvAnimationMaskTexture',\r\n};\r\n\r\nconst MToonMaterialColorMap: { [propertyName: string]: keyof MToonMaterial } = {\r\n    _Color: 'diffuseColor',\r\n    _ShadeColor: 'shadeColor',\r\n    _RimColor: 'rimColor',\r\n    _EmissionColor: 'emissiveColor',\r\n    _OutlineColor: 'outlineColor',\r\n};\r\n\r\n/**\r\n * @see https://github.com/vrm-c/UniVRM/blob/4ffd97c2e9339683ce9bf21e73f510bd90c2a5b2/Assets/VRM/Runtime/BlendShape/MaterialValueBindingMerger.cs\r\n */\r\nexport class MaterialValueBindingMerger {\r\n    private readonly m_materialMap: { [materialName: string]: SupportedMaterial } = {};\r\n    private readonly m_materialSetterMap: { [bindingKey: string]: Setter } = {};\r\n    private m_materialValueMap: { [bindingKey: string]: number } = {};\r\n    private m_used: { [targetKey: string]: any } = {};\r\n\r\n    private readonly baseValueCache: { [bindingKey: string]: Vector4 } = {};\r\n    private materialValuesToApply: { [bindingKey: string]: IVRMBlendShapeMaterialBind } = {};\r\n\r\n    /**\r\n     * @param materials VRMの全 Material\r\n     * @param materialValues\r\n     */\r\n    public constructor(materials: Material[], private readonly materialValues: IVRMBlendShapeMaterialBind[]) {\r\n        if (materials.length === 0 || materialValues.length === 0) {\r\n            return;\r\n        }\r\n        // プロパティ名の変換に対応している MToonMaterial と PBRMaterial を保存する\r\n        materials.forEach((material) => {\r\n            if (material instanceof MToonMaterial || material instanceof PBRMaterial) {\r\n                this.m_materialMap[material.name] = material;\r\n            }\r\n        });\r\n        materialValues.forEach((materialValue) => {\r\n            const bindingKey = this.makeBindingKey(materialValue);\r\n            if (this.m_materialSetterMap[bindingKey]) {\r\n                return;\r\n            }\r\n            const material = this.m_materialMap[materialValue.materialName];\r\n            if (!material) {\r\n                return;\r\n            }\r\n            const baseValue = this.getMaterialProperty(material, materialValue.propertyName);\r\n            if (!baseValue || materialValue.targetValue.length !== 4) {\r\n                return;\r\n            }\r\n            // モーフィング用に baseValue (初期値) と materialValue を保存する\r\n            this.baseValueCache[bindingKey] = baseValue;\r\n            this.materialValuesToApply[bindingKey] = materialValue;\r\n\r\n            const targetValue = Vector4.FromArray(materialValue.targetValue);\r\n            const valueName = materialValue.propertyName;\r\n            // Unity と座標系が異なるため、テクスチャの vOffset を反転する\r\n            if (material instanceof PBRMaterial) {\r\n                if (Object.keys(PBRMaterialTextureMap).some((k) => valueName.startsWith(k))) {\r\n                    targetValue.w *= -1;\r\n                }\r\n            } else if (Object.keys(MToonMaterialTextureMap).some((k) => valueName.startsWith(k))) {\r\n                targetValue.w *= -1;\r\n            }\r\n            if (valueName.endsWith('_ST_S')) {\r\n                // テクスチャの u方向 のみ更新する\r\n                const setter: Setter = (value, firstValue) => {\r\n                    const propValue = firstValue\r\n                        ? baseValue.add(targetValue.subtract(baseValue).scale(value))\r\n                        : this.getMaterialProperty(material, valueName)!.add(targetValue.subtract(baseValue).scale(value));\r\n                    const src = this.getMaterialProperty(material, valueName)!;\r\n                    src.x = propValue.x;\r\n                    src.z = propValue.z;\r\n                    this.updateMaterialProperty(material, valueName, src);\r\n                };\r\n                this.m_materialSetterMap[bindingKey] = setter;\r\n            } else if (valueName.endsWith('_ST_T')) {\r\n                // テクスチャの v方向 のみ更新する\r\n                const setter: Setter = (value, firstValue) => {\r\n                    const propValue = firstValue\r\n                        ? baseValue.add(targetValue.subtract(baseValue).scale(value))\r\n                        : this.getMaterialProperty(material, valueName)!.add(targetValue.subtract(baseValue).scale(value));\r\n                    const src = this.getMaterialProperty(material, valueName)!;\r\n                    src.y = propValue.y;\r\n                    src.w = propValue.w;\r\n                    this.updateMaterialProperty(material, valueName, src);\r\n                };\r\n                this.m_materialSetterMap[bindingKey] = setter;\r\n            } else {\r\n                const setter: Setter = (value, firstValue) => {\r\n                    const propValue = firstValue\r\n                        ? baseValue.add(targetValue.subtract(baseValue).scale(value))\r\n                        : this.getMaterialProperty(material, valueName)!.add(targetValue.subtract(baseValue).scale(value));\r\n                    this.updateMaterialProperty(material, valueName, propValue);\r\n                };\r\n                this.m_materialSetterMap[bindingKey] = setter;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * UniVRM では Dictionary のキー用のクラスを定義しているが、文字列で代用する\r\n     * MaterialValueBinding.BaseValue は対応するプロパティの初期値なので無視できる\r\n     */\r\n    private makeBindingKey(materialValue: IVRMBlendShapeMaterialBind): string {\r\n        return `${materialValue.materialName}_${materialValue.propertyName}_${materialValue.targetValue.join('-')}`;\r\n    }\r\n\r\n    /**\r\n     * UniVRM では Dictionary のキー用のクラスを定義しているが、文字列で代用する\r\n     */\r\n    private makeTargetKey(materialValue: IVRMBlendShapeMaterialBind): string {\r\n        return `${materialValue.materialName}_${materialValue.propertyName}`;\r\n    }\r\n\r\n    /**\r\n     * モーフィングを行う\r\n     * @param value 値(0〜1)\r\n     */\r\n    public morphing(value: number) {\r\n        this.accumulateValue(value);\r\n        this.apply();\r\n    }\r\n\r\n    /**\r\n     * materialValue ごとに重みを計算する\r\n     */\r\n    private accumulateValue(value: number): void {\r\n        this.materialValues.forEach((materialValue) => {\r\n            const bindingKey = this.makeBindingKey(materialValue);\r\n            if (this.m_materialValueMap[bindingKey]) {\r\n                this.m_materialValueMap[bindingKey] += value;\r\n            } else {\r\n                this.m_materialValueMap[bindingKey] = value;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Material のプロパティを更新する\r\n     */\r\n    private apply(): void {\r\n        this.m_used = {};\r\n\r\n        Object.entries(this.materialValuesToApply).forEach(([bindingKey, materialValue]) => {\r\n            const targetKey = this.makeTargetKey(materialValue);\r\n            if (!(targetKey in this.m_used)) {\r\n                const material = this.m_materialMap[materialValue.materialName];\r\n                const value = this.baseValueCache[bindingKey].clone();\r\n\r\n                // 対象のプロパティを初期値に戻す\r\n                const valueName = materialValue.propertyName;\r\n                if (valueName.endsWith('_ST_S')) {\r\n                    const v = this.getMaterialProperty(material, valueName)!;\r\n                    value.y = v.y;\r\n                    value.w = v.w;\r\n                } else if (valueName.endsWith('_ST_T')) {\r\n                    const v = this.getMaterialProperty(material, valueName)!;\r\n                    value.x = v.x;\r\n                    value.z = v.z;\r\n                }\r\n\r\n                this.updateMaterialProperty(material, valueName, value);\r\n                this.m_used[targetKey] = true;\r\n            }\r\n\r\n            const setter = this.m_materialSetterMap[bindingKey];\r\n            if (setter) {\r\n                setter(this.m_materialValueMap[bindingKey], false);\r\n            }\r\n        });\r\n\r\n        this.m_materialValueMap = {};\r\n    }\r\n\r\n    /**\r\n     * マテリアルのテクスチャか色に対応する Vector4 を取得する\r\n     */\r\n    private getMaterialProperty(material: SupportedMaterial, propertyName: string): Nullable<Vector4> {\r\n        const match = propertyName.match(/^(_[^_]+)/);\r\n        if (!match || !match[1]) {\r\n            return null;\r\n        }\r\n        const key = match[1];\r\n        if (material instanceof PBRMaterial) {\r\n            if (PBRMaterialTextureMap[key]) {\r\n                return this.convertTextureIntoVector4WhenNotNull(material[PBRMaterialTextureMap[key]]);\r\n            }\r\n            if (PBRMaterialColorMap[key]) {\r\n                return this.convertColorIntoVector4(material[PBRMaterialColorMap[key]], material.alpha);\r\n            }\r\n            return null;\r\n        }\r\n        // MToonMaterial\r\n        if (MToonMaterialTextureMap[key]) {\r\n            return this.convertTextureIntoVector4WhenNotNull(material[MToonMaterialTextureMap[key]]);\r\n        }\r\n        if (MToonMaterialColorMap[key]) {\r\n            return this.convertColorIntoVector4(material[MToonMaterialColorMap[key]], material.alpha);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Texture を Vector4 に変換する\r\n     */\r\n    private convertTextureIntoVector4WhenNotNull(texture: Nullable<BaseTexture>): Nullable<Vector4> {\r\n        if (!texture) {\r\n            return null;\r\n        }\r\n        const t = texture as Texture;\r\n        return new Vector4(t.uScale, t.vScale, t.uOffset, t.vOffset);\r\n    }\r\n\r\n    /**\r\n     * Color3 に alpha を加えて Vector4 に変換する\r\n     */\r\n    private convertColorIntoVector4(color: Color3, alpha: number): Vector4 {\r\n        return new Vector4(color.r, color.g, color.b, alpha);\r\n    }\r\n\r\n    /**\r\n     * マテリアルのテクスチャか色を更新する\r\n     */\r\n    private updateMaterialProperty(material: SupportedMaterial, propertyName: string, value: Vector4): void {\r\n        const match = propertyName.match(/^(_[^_]+)/);\r\n        if (!match || !match[1]) {\r\n            return;\r\n        }\r\n        const key = match[1];\r\n        if (material instanceof PBRMaterial) {\r\n            if (PBRMaterialTextureMap[key]) {\r\n                this.updateTextureWhenNotNull(material[PBRMaterialTextureMap[key]], value);\r\n                return;\r\n            }\r\n            if (PBRMaterialColorMap[key]) {\r\n                if (key === '_Color') {\r\n                    material.alpha = value.w;\r\n                }\r\n                this.updateColor(material[PBRMaterialColorMap[key]], value);\r\n            }\r\n            return;\r\n        }\r\n        // MToonMaterial\r\n        if (MToonMaterialTextureMap[key]) {\r\n            this.updateTextureWhenNotNull(material[MToonMaterialTextureMap[key]], value);\r\n            return;\r\n        }\r\n        if (MToonMaterialColorMap[key]) {\r\n            if (key === '_Color') {\r\n                material.alpha = value.w;\r\n            }\r\n            this.updateColor(material[MToonMaterialColorMap[key]], value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Texture を Vector4 で更新する\r\n     */\r\n    private updateTextureWhenNotNull(texture: Nullable<BaseTexture>, value: Vector4): void {\r\n        if (texture) {\r\n            const t = texture as Texture;\r\n            t.uScale = value.x;\r\n            t.vScale = value.y;\r\n            t.uOffset = value.z;\r\n            t.vOffset = value.w;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Color3 を Vector4 で更新する\r\n     */\r\n    private updateColor(color: Color3, value: Vector4): void {\r\n        color.r = value.x;\r\n        color.g = value.y;\r\n        color.b = value.z;\r\n    }\r\n}\r\n","import type { Vector3 } from '@babylonjs/core/Maths/math';\r\nimport type { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\nimport { SphereBuilder } from '@babylonjs/core/Meshes/Builders/sphereBuilder';\r\nimport { Collider } from './collider';\r\n\r\n/**\r\n * VRM SpringBone ColliderGroup\r\n */\r\nexport class ColliderGroup {\r\n    public readonly colliders: Collider[] = [];\r\n\r\n    /**\r\n     * @param transform The node of the collider group for setting up collision detections.\r\n     */\r\n    public constructor(public readonly transform: TransformNode) {}\r\n\r\n    /**\r\n     * Add offsetted collider\r\n     *\r\n     * @param offset The local coordinate from the node of the collider group.\r\n     * @param radius The radius of the collider.\r\n     */\r\n    public addCollider(offset: Vector3, radius: number) {\r\n        const sphere = SphereBuilder.CreateSphere(\r\n            `${this.transform.name}_ColliderSphere`,\r\n            {\r\n                segments: 6,\r\n                diameter: radius * 2.0,\r\n                updatable: true,\r\n            },\r\n            this.transform.getScene()\r\n        );\r\n        sphere.setParent(this.transform);\r\n        sphere.setPositionWithLocalVector(offset);\r\n        sphere.setEnabled(false);\r\n\r\n        this.colliders.push(new Collider(offset, radius, sphere));\r\n    }\r\n}\r\n","import type { Mesh } from '@babylonjs/core';\r\nimport type { Vector3 } from '@babylonjs/core/Maths/math';\r\n\r\n/**\r\n * Collider\r\n */\r\nexport class Collider {\r\n    /**\r\n     * @param offset The local coordinate from the node of the collider group.\r\n     * @param radius The radius of the collider.\r\n     * @param sphere The spehere mesh for worldMatrix and gizmo.\r\n     */\r\n    public constructor(public readonly offset: Vector3, public readonly radius: number, public readonly sphere: Mesh) {}\r\n}\r\n","import { Vector3 } from '@babylonjs/core/Maths/math';\r\nimport type { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\nimport type { Nullable } from '@babylonjs/core/types';\r\nimport type { IVRMSecondaryAnimation } from '../vrm-interfaces';\r\nimport { ColliderGroup } from './collider-group';\r\nimport { VRMSpringBone } from './vrm-spring-bone';\r\n\r\n/**\r\n * function to get bone from nodeIndex\r\n */\r\ntype getBone = (nodeIndex: number) => Nullable<TransformNode>;\r\n\r\n/**\r\n * VRM SpringBone Controller\r\n */\r\nexport class SpringBoneController {\r\n    /**\r\n     * Spring Bone List\r\n     */\r\n    private springs: VRMSpringBone[];\r\n\r\n    /**\r\n     * @param ext SecondaryAnimation Object\r\n     * @param getBone\r\n     */\r\n    public constructor(public readonly ext: IVRMSecondaryAnimation, getBone: getBone) {\r\n        const colliderGroups = this.constructColliderGroups(getBone);\r\n        this.springs = this.constructSprings(getBone, colliderGroups);\r\n    }\r\n\r\n    public dispose() {\r\n        this.springs = [];\r\n    }\r\n\r\n    /**\r\n     * Update all SpringBones\r\n     *\r\n     * @param deltaTime Elapsed sec from previous frame\r\n     * @see https://docs.unity3d.com/ScriptReference/Time-deltaTime.html\r\n     */\r\n    public async update(deltaTime: number): Promise<void> {\r\n        // ポーズ後のあらぶり防止のため clamp\r\n        deltaTime = Math.max(0.0, Math.min(16.666, deltaTime)) / 1000;\r\n        const promises = this.springs.map<Promise<void>>((spring) => {\r\n            return spring.update(deltaTime);\r\n        });\r\n        return Promise.all(promises).then(() => {\r\n            /* Do nothing */\r\n        });\r\n    }\r\n\r\n    private constructColliderGroups(getBone: getBone) {\r\n        if (!this.ext.colliderGroups || !this.ext.colliderGroups.length) {\r\n            return [];\r\n        }\r\n        const colliderGroups: ColliderGroup[] = [];\r\n        this.ext.colliderGroups.forEach((colliderGroup) => {\r\n            const bone = getBone(colliderGroup.node) as TransformNode;\r\n            const g = new ColliderGroup(bone);\r\n            colliderGroup.colliders.forEach((collider) => {\r\n                g.addCollider(\r\n                    // VRM 右手系Y_UP, -Z_Front から Babylon.js 左手系Y_UP, +Z_Front にする\r\n                    new Vector3(-collider.offset.x, collider.offset.y, -collider.offset.z),\r\n                    collider.radius\r\n                );\r\n            });\r\n            colliderGroups.push(g);\r\n        });\r\n        return colliderGroups;\r\n    }\r\n\r\n    private constructSprings(getBone: getBone, colliderGroups: ColliderGroup[]) {\r\n        if (!this.ext.boneGroups || !this.ext.boneGroups.length) {\r\n            return [];\r\n        }\r\n        const springs: VRMSpringBone[] = [];\r\n        this.ext.boneGroups.forEach((spring) => {\r\n            const rootBones = (spring.bones || []).map((bone) => {\r\n                return getBone(bone) as TransformNode;\r\n            });\r\n            const springColliders = (spring.colliderGroups || []).map<ColliderGroup>((g) => {\r\n                return colliderGroups[g];\r\n            });\r\n            springs.push(\r\n                new VRMSpringBone(\r\n                    spring.comment,\r\n                    spring.stiffiness,\r\n                    spring.gravityPower,\r\n                    new Vector3(\r\n                        // VRM 右手系Y_UP, -Z_Front から Babylon.js 左手系Y_UP, +Z_Front にする\r\n                        -spring.gravityDir.x,\r\n                        spring.gravityDir.y,\r\n                        -spring.gravityDir.z\r\n                    ).normalize(),\r\n                    spring.dragForce,\r\n                    getBone(spring.center),\r\n                    spring.hitRadius,\r\n                    rootBones,\r\n                    springColliders\r\n                )\r\n            );\r\n        });\r\n        return springs;\r\n    }\r\n}\r\n","import { Matrix, Quaternion, Vector3 } from '@babylonjs/core/Maths/math';\r\nimport type { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\nimport type { Nullable } from '@babylonjs/core/types';\r\nimport type { ColliderGroup } from './collider-group';\r\n// based on\r\n// http://rocketjump.skr.jp/unity3d/109/\r\n// https://github.com/dwango/UniVRM/blob/master/Scripts/SpringBone/VRMSpringBone.cs\r\n// https://github.com/pixiv/three-vrm/blob/aad551e041fad553c19d2091e5f5eaff1eb8faa8/packages/three-vrm/src/springbone/VRMSpringBone.ts\r\n\r\nconst IDENTITY_MATRIX = Matrix.Identity();\r\n\r\nconst _v3A = new Vector3();\r\nconst _v3B = new Vector3();\r\nconst _v3C = new Vector3();\r\nconst _quatA = new Quaternion();\r\nconst _matA = new Matrix();\r\nconst _matB = new Matrix();\r\n\r\n/**\r\n * Verlet Spring Bone\r\n */\r\nexport class VRMSpringBoneLogic {\r\n    /**\r\n     * initial local transform Marix\r\n     */\r\n    private readonly initialLocalMatrix: Matrix;\r\n    /**\r\n     * Cloned initial local rotation\r\n     */\r\n    private readonly initialLocalRotation: Quaternion;\r\n    /**\r\n     * Cloned initial local child position\r\n     */\r\n    private readonly initialLocalChildPosition: Vector3;\r\n\r\n    /**\r\n     * Length of the bone in relative space unit.\r\n     */\r\n    private readonly centerSpaceBoneLength: number;\r\n    /**\r\n     * Position of the bone in relative space unit.\r\n     */\r\n    private readonly centerSpacePosition: Vector3;\r\n    /**\r\n     * Reference of parent rotation\r\n     */\r\n    private readonly boneAxis: Vector3;\r\n\r\n    private currentTail: Vector3 = new Vector3();\r\n    private prevTail: Vector3 = new Vector3();\r\n    private nextTail: Vector3 = new Vector3();\r\n\r\n    /**\r\n     * @param center Center reference of TransformNode\r\n     * @param radius Collision Radius\r\n     * @param transform Base TransformNode\r\n     */\r\n    public constructor(public readonly center: Nullable<TransformNode>, public readonly radius: number, public readonly transform: TransformNode) {\r\n        // Initialize rotationQuaternion when not initialized\r\n        if (!transform.rotationQuaternion) {\r\n            transform.rotationQuaternion = transform.rotation.toQuaternion();\r\n        }\r\n\r\n        const worldMatrix = transform.getWorldMatrix();\r\n        this.centerSpacePosition = worldMatrix.getTranslation();\r\n\r\n        this.initialLocalMatrix = transform._localMatrix.clone();\r\n        this.initialLocalRotation = transform.rotationQuaternion.clone();\r\n\r\n        const children = transform.getChildTransformNodes(true);\r\n        if (children.length === 0) {\r\n            this.initialLocalChildPosition = transform.position.clone().normalize().scaleInPlace(0.07);\r\n        } else {\r\n            this.initialLocalChildPosition = children[0].position.clone();\r\n        }\r\n\r\n        Vector3.TransformCoordinatesToRef(this.initialLocalChildPosition, worldMatrix, this.currentTail);\r\n        this.prevTail.copyFrom(this.currentTail);\r\n        this.nextTail.copyFrom(this.currentTail);\r\n\r\n        this.boneAxis = this.initialLocalChildPosition.normalizeToNew();\r\n        Vector3.TransformCoordinatesToRef(this.initialLocalChildPosition, worldMatrix, _v3A);\r\n        this.centerSpaceBoneLength = _v3A.subtractInPlace(this.centerSpacePosition).length();\r\n\r\n        if (center) {\r\n            this.getMatrixWorldToCenter(_matA);\r\n\r\n            Vector3.TransformCoordinatesToRef(this.currentTail, _matA, this.currentTail);\r\n            Vector3.TransformCoordinatesToRef(this.prevTail, _matA, this.prevTail);\r\n            Vector3.TransformCoordinatesToRef(this.nextTail, _matA, this.nextTail);\r\n\r\n            worldMatrix.multiplyToRef(_matA, _matA);\r\n\r\n            _matA.getTranslationToRef(this.centerSpacePosition);\r\n\r\n            Vector3.TransformCoordinatesToRef(this.initialLocalChildPosition, _matA, _v3A);\r\n            this.centerSpaceBoneLength = _v3A.subtractInPlace(this.centerSpacePosition).length();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update Tail position\r\n     *\r\n     * @param stiffnessForce Current frame stiffness\r\n     * @param dragForce Current frame drag force\r\n     * @param external Current frame external force\r\n     * @param colliderGroups Current frame colliderGroups\r\n     */\r\n    public update(stiffnessForce: number, dragForce: number, external: Vector3, colliderGroups: ColliderGroup[]): void {\r\n        if (Number.isNaN(this.transform.getAbsolutePosition().x)) {\r\n            // Do not update when absolute position is invalid\r\n            return;\r\n        }\r\n\r\n        // Get bone position in center space\r\n        this.getMatrixWorldToCenter(_matA);\r\n        this.transform.getWorldMatrix().multiplyToRef(_matA, _matA);\r\n        _matA.getTranslationToRef(this.centerSpacePosition);\r\n\r\n        // Get parent position in center space\r\n        this.getMatrixWorldToCenter(_matB);\r\n        this.getParentMatrixWorld().multiplyToRef(_matB, _matB);\r\n\r\n        // verlet積分で次の位置を計算\r\n        this.nextTail.copyFrom(this.currentTail);\r\n        {\r\n            // 減衰付きで前のフレームの移動を継続\r\n            _v3A.copyFrom(this.currentTail)\r\n                .subtractInPlace(this.prevTail)\r\n                .scaleInPlace(1.0 - dragForce);\r\n            this.nextTail.addInPlace(_v3A);\r\n        }\r\n        {\r\n            // 親の回転による子ボーンの移動目標\r\n            _v3A.copyFrom(this.boneAxis);\r\n            Vector3.TransformCoordinatesToRef(_v3A, this.initialLocalMatrix, _v3A);\r\n            Vector3.TransformCoordinatesToRef(_v3A, _matB, _v3A);\r\n            _v3A.subtractInPlace(this.centerSpacePosition).normalize().scaleInPlace(stiffnessForce);\r\n            this.nextTail.addInPlace(_v3A);\r\n        }\r\n        {\r\n            // 外力による移動量\r\n            this.nextTail.addInPlace(external);\r\n        }\r\n        {\r\n            // 長さを boneLength に強制\r\n            this.nextTail.subtractInPlace(this.centerSpacePosition).normalize().scaleInPlace(this.centerSpaceBoneLength).addInPlace(this.centerSpacePosition);\r\n        }\r\n        {\r\n            // Collision で移動\r\n            this.collide(colliderGroups, this.nextTail);\r\n        }\r\n\r\n        this.prevTail.copyFrom(this.currentTail);\r\n        this.currentTail.copyFrom(this.nextTail);\r\n\r\n        this.initialLocalMatrix.multiplyToRef(_matB, _matA);\r\n        const initialCenterSpaceMatrixInv = _matA.invert();\r\n        Vector3.TransformCoordinatesToRef(this.nextTail, initialCenterSpaceMatrixInv, _v3A);\r\n        _v3A.normalizeToRef(_v3B);\r\n        Quaternion.FromUnitVectorsToRef(this.boneAxis, _v3B, _quatA);\r\n        const applyRotation = _quatA;\r\n        this.initialLocalRotation.multiplyToRef(applyRotation, this.transform.rotationQuaternion!);\r\n\r\n        // update WorldMatrix\r\n        this.transform.computeWorldMatrix(true);\r\n    }\r\n\r\n    /**\r\n     * Create a matrix that converts world space into center space.\r\n     * @param result Target matrix\r\n     */\r\n    private getMatrixWorldToCenter(result: Matrix): Matrix {\r\n        if (this.center) {\r\n            this.center.getWorldMatrix().invertToRef(result);\r\n        } else {\r\n            result.copyFrom(IDENTITY_MATRIX);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns the world matrix of its parent object.\r\n     */\r\n    private getParentMatrixWorld(): Matrix {\r\n        return this.transform.parent ? (this.transform.parent as TransformNode).getWorldMatrix() : IDENTITY_MATRIX;\r\n    }\r\n\r\n    /**\r\n     * 衝突判定を行う\r\n     * @param colliderGroups\r\n     * @param tail\r\n     */\r\n    private collide(colliderGroups: ColliderGroup[], tail: Vector3) {\r\n        colliderGroups.forEach((colliderGroup) => {\r\n            colliderGroup.colliders.forEach((collider) => {\r\n                this.getMatrixWorldToCenter(_matA);\r\n                collider.sphere.computeWorldMatrix().multiplyToRef(_matA, _matA);\r\n                _matA.getTranslationToRef(_v3A);\r\n                const colliderCenterSpacePosition = _v3A;\r\n\r\n                let maxAbsScale = 0;\r\n                collider.sphere.absoluteScaling.asArray().forEach((s) => {\r\n                    maxAbsScale = Math.max(maxAbsScale, Math.abs(s));\r\n                });\r\n                const colliderRadius = collider.radius * maxAbsScale;\r\n                const r = this.radius + colliderRadius;\r\n\r\n                tail.subtractToRef(colliderCenterSpacePosition, _v3B);\r\n                if (_v3B.lengthSquared() <= r * r) {\r\n                    const normal = _v3B.copyFrom(tail).subtractInPlace(colliderCenterSpacePosition).normalize();\r\n                    const posFromCollider = _v3C.copyFrom(colliderCenterSpacePosition).addInPlace(normal.scaleInPlace(r));\r\n\r\n                    tail.copyFrom(\r\n                        posFromCollider.subtractInPlace(this.centerSpacePosition).normalize().scaleInPlace(this.centerSpaceBoneLength).addInPlace(this.centerSpacePosition)\r\n                    );\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { StandardMaterial } from '@babylonjs/core/Materials/standardMaterial';\r\nimport { Color3, Vector3 } from '@babylonjs/core/Maths/math';\r\nimport { MeshBuilder } from '@babylonjs/core/Meshes/meshBuilder';\r\nimport type { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\nimport type { Nullable } from '@babylonjs/core/types';\r\nimport type { ColliderGroup } from './collider-group';\r\nimport { VRMSpringBoneLogic } from './vrm-spring-bone-logic';\r\n\r\n/**\r\n * @see https://github.com/vrm-c/UniVRM/blob/master/Assets/VRM/UniVRM/Scripts/SpringBone/VRMSpringBone.cs\r\n */\r\nexport class VRMSpringBone {\r\n    public verlets: VRMSpringBoneLogic[] = [];\r\n    private activeBones: TransformNode[] = [];\r\n\r\n    /** @hidden */\r\n    private drawGizmo = false;\r\n\r\n    /**\r\n     * @see https://github.com/vrm-c/vrm-specification/tree/master/specification/0.0\r\n     * @param comment Annotation comment\r\n     * @param stiffness The resilience of the swaying object (the power of returning to the initial pose).\r\n     * @param gravityPower The strength of gravity.\r\n     * @param gravityDir The direction of gravity. Set (0, -1, 0) for simulating the gravity. Set (1, 0, 0) for simulating the wind.\r\n     * @param dragForce The resistance (deceleration) of automatic animation.\r\n     * @param center The reference point of a swaying object can be set at any location except the origin.\r\n     *               When implementing UI moving with warp,\r\n     *               the parent node to move with warp can be specified if you don't want to make the object swaying with warp movement.\r\n     * @param hitRadius The radius of the sphere used for the collision detection with colliders.\r\n     * @param bones Specify the node index of the root bone of the swaying object.\r\n     * @param colliderGroups Specify the index of the collider group for collisions with swaying objects.\r\n     */\r\n    public constructor(\r\n        public readonly comment: string,\r\n        public readonly stiffness: number,\r\n        public readonly gravityPower: number,\r\n        public readonly gravityDir: Vector3,\r\n        public readonly dragForce: number,\r\n        public readonly center: Nullable<TransformNode>,\r\n        public readonly hitRadius: number,\r\n        public readonly bones: Array<Nullable<TransformNode>>,\r\n        public readonly colliderGroups: ColliderGroup[]\r\n    ) {\r\n        this.activeBones = this.bones.filter((bone) => bone !== null) as TransformNode[];\r\n        this.activeBones.forEach((bone) => {\r\n            [bone].concat(bone.getChildTransformNodes()).forEach((b) => {\r\n                this.verlets.push(new VRMSpringBoneLogic(this.center, this.hitRadius, b));\r\n            });\r\n        });\r\n\r\n        if (this.drawGizmo) {\r\n            this.setupGizmo();\r\n        }\r\n    }\r\n\r\n    private setupGizmo() {\r\n        this.activeBones.forEach((bone) => {\r\n            const scene = bone.getScene();\r\n            [bone].concat(bone.getChildTransformNodes()).forEach((b) => {\r\n                const boneGizmo = MeshBuilder.CreateSphere(\r\n                    b.name + '_boneGizmo',\r\n                    {\r\n                        segments: 6,\r\n                        diameter: this.hitRadius * 2,\r\n                        updatable: true,\r\n                    },\r\n                    scene\r\n                );\r\n                const mat = new StandardMaterial(b.name + '_boneGizmomat', scene);\r\n                mat.emissiveColor = Color3.Red();\r\n                mat.wireframe = true;\r\n                boneGizmo.material = mat;\r\n                boneGizmo.setParent(b);\r\n                boneGizmo.position = Vector3.Zero();\r\n            });\r\n        });\r\n\r\n        this.colliderGroups.forEach((group) => {\r\n            const scene = group.transform.getScene();\r\n            group.colliders.forEach((collider) => {\r\n                const sphere = collider.sphere;\r\n                if (!sphere.isEnabled(false)) {\r\n                    sphere.setEnabled(true);\r\n                    const mat = new StandardMaterial(group.transform.name + '_colliderGizmomat', scene);\r\n                    mat.emissiveColor = Color3.Yellow();\r\n                    mat.wireframe = true;\r\n                    sphere.material = mat;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update bones\r\n     *\r\n     * @param deltaTime\r\n     */\r\n    public async update(deltaTime: number): Promise<void> {\r\n        const stiffness = this.stiffness * deltaTime;\r\n        const external = this.gravityDir.scale(this.gravityPower * deltaTime);\r\n\r\n        const promises = this.verlets.map<Promise<void>>((verlet) => {\r\n            return new Promise<void>((resolve) => {\r\n                verlet.update(stiffness, this.dragForce, external, this.colliderGroups);\r\n                resolve();\r\n            });\r\n        });\r\n\r\n        return Promise.all(promises).then(() => {\r\n            /* Do Nothing */\r\n        });\r\n    }\r\n}\r\n","import { ArcRotateCamera } from '@babylonjs/core/Cameras/arcRotateCamera';\r\nimport { Engine } from '@babylonjs/core/Engines/engine';\r\nimport { DirectionalLight } from '@babylonjs/core/Lights/directionalLight';\r\nimport { HemisphericLight } from '@babylonjs/core/Lights/hemisphericLight';\r\nimport { PointLight } from '@babylonjs/core/Lights/pointLight';\r\nimport { ShadowGenerator } from '@babylonjs/core/Lights/Shadows/shadowGenerator';\r\nimport { SceneLoader } from '@babylonjs/core/Loading/sceneLoader';\r\nimport { Vector3 } from '@babylonjs/core/Maths/math';\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport { Scene } from '@babylonjs/core/scene';\r\nimport type { VRMManager } from '../vrm-manager';\r\n\r\nimport '@babylonjs/core/Helpers/sceneHelpers';\r\nimport '@babylonjs/core/Meshes/Builders/sphereBuilder';\r\nimport '@babylonjs/core/Meshes/Builders/torusKnotBuilder';\r\nimport '@babylonjs/inspector';\r\n// eslint-disable-next-line import/no-internal-modules\r\nimport '../index';\r\n\r\nasync function main() {\r\n    const debugProperties = getDebugProperties();\r\n    const canvas = document.getElementById('main-canvas') as HTMLCanvasElement;\r\n    const engine = new Engine(canvas, true, {\r\n        alpha: false,\r\n        disableWebGL2Support: debugProperties.webgl1,\r\n    });\r\n\r\n    const scene = new Scene(engine);\r\n    const camera = new ArcRotateCamera('MainCamera1', 0, 0, 3, new Vector3(0, 1.2, 0), scene, true);\r\n    camera.lowerRadiusLimit = 0.1;\r\n    camera.upperRadiusLimit = 20;\r\n    camera.wheelDeltaPercentage = 0.01;\r\n    camera.minZ = 0.3;\r\n    camera.position = new Vector3(0, 1.2, -3);\r\n    camera.attachControl(canvas, true);\r\n\r\n    scene.createDefaultEnvironment({\r\n        createGround: true,\r\n        createSkybox: false,\r\n        enableGroundMirror: false,\r\n        enableGroundShadow: false,\r\n    });\r\n\r\n    // Lights\r\n    const directionalLight = new DirectionalLight('DirectionalLight1', new Vector3(0, -0.5, 1.0), scene);\r\n    directionalLight.position = new Vector3(0, 25, -50);\r\n    directionalLight.setEnabled(true);\r\n    const hemisphericLight = new HemisphericLight('HemisphericLight1', new Vector3(-0.2, -0.8, -1), scene);\r\n    hemisphericLight.setEnabled(false);\r\n    const pointLight = new PointLight('PointLight1', new Vector3(0, 0, 1), scene);\r\n    pointLight.setEnabled(false);\r\n\r\n    // Meshes\r\n    const standardMaterialSphere = Mesh.CreateSphere('StandardMaterialSphere1', 16, 1, scene);\r\n    standardMaterialSphere.position = new Vector3(1.5, 1.2, 0);\r\n    standardMaterialSphere.receiveShadows = true;\r\n\r\n    const shadowCaster = Mesh.CreateTorusKnot('ShadowCaster', 1, 0.2, 32, 32, 2, 3, scene);\r\n    shadowCaster.position = new Vector3(0.0, 5.0, -10.0);\r\n    shadowCaster.setEnabled(debugProperties.shadow);\r\n    if (debugProperties.shadow) {\r\n        const shadowGenerator = new ShadowGenerator(1024, directionalLight);\r\n        shadowGenerator.addShadowCaster(shadowCaster);\r\n    }\r\n\r\n    if (debugProperties.inspector) {\r\n        await scene.debugLayer.show({\r\n            globalRoot: document.getElementById('wrapper') as HTMLElement,\r\n        });\r\n    }\r\n\r\n    // Expose current scene\r\n    (window as any).currentScene = scene;\r\n\r\n    scene.onBeforeRenderObservable.add(() => {\r\n        // SpringBone\r\n        if (!scene.metadata || !scene.metadata.vrmManagers) {\r\n            return;\r\n        }\r\n        const managers = scene.metadata.vrmManagers as VRMManager[];\r\n        const deltaTime = scene.getEngine().getDeltaTime();\r\n        managers.forEach((manager) => {\r\n            manager.update(deltaTime);\r\n        });\r\n    });\r\n    engine.runRenderLoop(() => {\r\n        scene.render();\r\n        shadowCaster.rotate(Vector3.Up(), 0.01);\r\n    });\r\n    window.addEventListener('resize', () => {\r\n        engine.resize();\r\n    });\r\n    await SceneLoader.AppendAsync('./', 'AliciaSolid.vrm', scene);\r\n\r\n    let fileCount = 1;\r\n    (document.getElementById('file-input') as HTMLInputElement).addEventListener('change', (evt) => {\r\n        const file = (evt as any).target.files[0];\r\n        console.log(`loads ${file.name} ${file.size} bytes`);\r\n        const currentMeshCount = scene.meshes.length;\r\n        SceneLoader.Append('file:', file, scene, () => {\r\n            console.log(`loaded ${file.name}`);\r\n            for (let i = currentMeshCount; i < scene.meshes.length; i++) {\r\n                scene.meshes[i].translate(Vector3.Right(), 1.5 * fileCount);\r\n                scene.meshes[i].receiveShadows = true;\r\n            }\r\n            fileCount++;\r\n        });\r\n    });\r\n}\r\n\r\ninterface DebugProperties {\r\n    webgl1: boolean;\r\n    shadow: boolean;\r\n    inspector: boolean;\r\n}\r\n\r\nfunction getDebugProperties(): DebugProperties {\r\n    const href = window.location.href;\r\n\r\n    return {\r\n        webgl1: href.includes('webgl1'),\r\n        shadow: href.includes('shadow'),\r\n        inspector: href.includes('inspector'),\r\n    };\r\n}\r\n\r\nmain().catch((reason) => {\r\n    console.error(reason);\r\n});\r\n","import type { Material } from '@babylonjs/core/Materials/material';\r\nimport type { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport type { Nullable } from '@babylonjs/core/types';\r\nimport type { IGLTFLoaderExtension, IMaterial } from '@babylonjs/loaders/glTF/2.0';\r\nimport { GLTFLoader } from '@babylonjs/loaders/glTF/2.0';\r\nimport { VRMMaterialGenerator } from './vrm-material-generator';\r\n\r\n/**\r\n * `extensions` に入る拡張キー\r\n */\r\nconst NAME = 'VCAST_vci_material_unity';\r\n\r\n/**\r\n * VCAST_vci_material_unity 拡張を処理する\r\n */\r\nexport class VCAST_vci_material_unity implements IGLTFLoaderExtension {\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public readonly name = NAME;\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public enabled = true;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public constructor(private loader: GLTFLoader) {}\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public dispose(): void {\r\n        (this.loader as any) = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public _loadMaterialAsync(context: string, material: IMaterial, mesh: Mesh, babylonDrawMode: number, assign: (babylonMaterial: Material) => void): Nullable<Promise<Material>> {\r\n        // ジェネレータでマテリアルを生成する\r\n        return new VRMMaterialGenerator(this.loader).generate(context, material, mesh, babylonDrawMode, assign);\r\n    }\r\n}\r\n\r\n// ローダーに登録する\r\nGLTFLoader.RegisterExtension(NAME, (loader) => new VCAST_vci_material_unity(loader));\r\n","import type { Material } from '@babylonjs/core/Materials/material';\r\nimport type { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport type { Nullable } from '@babylonjs/core/types';\r\nimport type { IGLTFLoaderExtension, IMaterial, IMeshPrimitive } from '@babylonjs/loaders/glTF/2.0';\r\nimport { GLTFLoader } from '@babylonjs/loaders/glTF/2.0';\r\nimport { VRMManager } from './vrm-manager';\r\nimport { VRMMaterialGenerator } from './vrm-material-generator';\r\n\r\n/**\r\n * `extensions` に入る拡張キー\r\n */\r\nconst NAME = 'VRM';\r\n\r\n/**\r\n * VRM 拡張を処理する\r\n * [Specification](https://github.com/vrm-c/vrm-specification/tree/master/specification/0.0)\r\n */\r\nexport class VRM implements IGLTFLoaderExtension {\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public readonly name = NAME;\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public enabled = true;\r\n    /**\r\n     * この Mesh index 以降が読み込み対象\r\n     */\r\n    private meshesFrom = 0;\r\n    /**\r\n     * この TransformNode index 以降が読み込み対象\r\n     */\r\n    private transformNodesFrom = 0;\r\n    /**\r\n     * この Material index 以降が読み込み対象\r\n     */\r\n    private materialsFrom = 0;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public constructor(private loader: GLTFLoader) {\r\n        // GLTFLoader has already added rootMesh as __root__ before load extension\r\n        // @see glTFLoader._loadData\r\n        this.meshesFrom = this.loader.babylonScene.meshes.length - 1;\r\n        this.transformNodesFrom = this.loader.babylonScene.transformNodes.length;\r\n        this.materialsFrom = this.loader.babylonScene.materials.length;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public dispose(): void {\r\n        (this.loader as any) = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public onReady() {\r\n        if (!this.loader.gltf.extensions || !this.loader.gltf.extensions[NAME]) {\r\n            return;\r\n        }\r\n        const scene = this.loader.babylonScene;\r\n        const manager = new VRMManager(this.loader.gltf.extensions[NAME], this.loader.babylonScene, this.meshesFrom, this.transformNodesFrom, this.materialsFrom);\r\n        scene.metadata = scene.metadata || {};\r\n        scene.metadata.vrmManagers = scene.metadata.vrmManagers || [];\r\n        scene.metadata.vrmManagers.push(manager);\r\n        this.loader.babylonScene.onDisposeObservable.add(() => {\r\n            // Scene dispose 時に Manager も破棄する\r\n            manager.dispose();\r\n            this.loader.babylonScene.metadata.vrmManagers = [];\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public _loadVertexDataAsync(context: string, primitive: IMeshPrimitive, babylonMesh: Mesh) {\r\n        if (!primitive.extras || !primitive.extras.targetNames) {\r\n            return null;\r\n        }\r\n        // まだ MorphTarget が生成されていないので、メタ情報にモーフターゲット情報を入れておく\r\n        babylonMesh.metadata = babylonMesh.metadata || {};\r\n        babylonMesh.metadata.vrmTargetNames = primitive.extras.targetNames;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public _loadMaterialAsync(context: string, material: IMaterial, mesh: Mesh, babylonDrawMode: number, assign: (babylonMaterial: Material) => void): Nullable<Promise<Material>> {\r\n        // ジェネレータでマテリアルを生成する\r\n        return new VRMMaterialGenerator(this.loader).generate(context, material, mesh, babylonDrawMode, assign);\r\n    }\r\n}\r\n\r\n// ローダーに登録する\r\nGLTFLoader.RegisterExtension(NAME, (loader) => new VRM(loader));\r\n","import { SceneLoader } from '@babylonjs/core/Loading/sceneLoader';\r\nimport { GLTFFileLoader } from '@babylonjs/loaders/glTF/glTFFileLoader';\r\n\r\n/**\r\n * VRM/VCI ファイルを読み込めるようにする\r\n * 拡張子を変更しただけ\r\n */\r\nexport class VRMFileLoader extends GLTFFileLoader {\r\n    public name = 'vrm';\r\n    public extensions = {\r\n        '.vrm': { isBinary: true },\r\n        '.vci': { isBinary: true },\r\n    };\r\n\r\n    public createPlugin() {\r\n        return new VRMFileLoader();\r\n    }\r\n}\r\n\r\nif (SceneLoader) {\r\n    SceneLoader.RegisterPlugin(new VRMFileLoader());\r\n}\r\n","export interface IVRMVector3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\n/**\r\n * extensions.VRM\r\n */\r\nexport interface IVRM {\r\n    exporterVersion: string;\r\n    specVersion: string;\r\n    meta: IVRMMeta;\r\n    humanoid: IVRMHumanoid;\r\n    firstPerson: IVRMFirstPerson;\r\n    blendShapeMaster: IVRMBlendShapeMaster;\r\n    secondaryAnimation: IVRMSecondaryAnimation;\r\n    materialProperties: IVRMMaterialProperty[];\r\n}\r\n\r\n/**\r\n * extensions.VRM.meta\r\n */\r\nexport interface IVRMMeta {\r\n    title: string;\r\n    version: string;\r\n    author: string;\r\n    contactInformation?: string;\r\n    reference?: string;\r\n    texture?: number;\r\n}\r\n\r\n/**\r\n * extensions.VRM.humanoid\r\n */\r\nexport interface IVRMHumanoid {\r\n    humanBones: IVRMHumanoidBone[];\r\n    armStretch?: number;\r\n    legStretch?: number;\r\n    upperArmTwist?: number;\r\n    lowerArmTwist?: number;\r\n    upperLegTwist?: number;\r\n    lowerLegTwist?: number;\r\n    feetSpacing?: number;\r\n    hasTranslationDoF?: boolean;\r\n}\r\n\r\nexport interface IVRMHumanoidBone {\r\n    bone: string;\r\n    node: number;\r\n    useDefaultValues: boolean;\r\n    min?: IVRMVector3;\r\n    max?: IVRMVector3;\r\n    center?: IVRMVector3;\r\n    axisLength?: number;\r\n}\r\n\r\nexport interface IVRMFirstPersonMeshAnnotation {\r\n    mesh: number;\r\n    firstPersonFlag: string;\r\n}\r\n\r\nexport interface IVRMFirstPersonDegreeMap {\r\n    curve: number[];\r\n    xRange: number;\r\n    yRange: number;\r\n}\r\n\r\n/**\r\n * extensions.VRM.firstPerson\r\n */\r\nexport interface IVRMFirstPerson {\r\n    firstPersonBone: number;\r\n    firstPersonBoneOffset: IVRMVector3;\r\n    meshAnnotations: IVRMFirstPersonMeshAnnotation[];\r\n    lookAtTypeName: 'Bone' | 'BlendShape';\r\n    lookAtHorizontalInner: IVRMFirstPersonDegreeMap;\r\n    lookAtHorizontalOuter: IVRMFirstPersonDegreeMap;\r\n    lookAtVerticalDown: IVRMFirstPersonDegreeMap;\r\n    lookAtVerticalUp: IVRMFirstPersonDegreeMap;\r\n}\r\n\r\n/**\r\n * extensions.VRM.blendShapeMaster\r\n */\r\nexport interface IVRMBlendShapeMaster {\r\n    blendShapeGroups: IVRMBlendShapeGroup[];\r\n}\r\n\r\nexport interface IVRMBlendShapeGroup {\r\n    name: string;\r\n    presetName: string;\r\n    binds: IVRMBlendShapeBind[];\r\n    materialValues: IVRMBlendShapeMaterialBind[];\r\n    isBinary: boolean;\r\n}\r\n\r\nexport interface IVRMBlendShapeBind {\r\n    mesh: number;\r\n    index: number;\r\n    weight: number;\r\n}\r\n\r\nexport interface IVRMBlendShapeMaterialBind {\r\n    materialName: string;\r\n    propertyName: string;\r\n    targetValue: number[];\r\n}\r\n\r\nexport interface IVRMSecondaryAnimationSpring {\r\n    comment: string;\r\n    stiffiness: number;\r\n    gravityPower: number;\r\n    gravityDir: IVRMVector3;\r\n    dragForce: number;\r\n    center: number;\r\n    hitRadius: number;\r\n    bones: number[];\r\n    colliderGroups: number[];\r\n}\r\n\r\nexport interface IVRMSecondaryAnimationCollider {\r\n    offset: IVRMVector3;\r\n    radius: number;\r\n}\r\n\r\nexport interface IVRMSecondaryAnimationColliderGroup {\r\n    node: number;\r\n    colliders: IVRMSecondaryAnimationCollider[];\r\n}\r\n\r\n/**\r\n * extensions.VRM.secondaryAnimation\r\n */\r\nexport interface IVRMSecondaryAnimation {\r\n    boneGroups: IVRMSecondaryAnimationSpring[];\r\n    colliderGroups: IVRMSecondaryAnimationColliderGroup[];\r\n}\r\n\r\nexport enum IVRMMaterialPropertyShader {\r\n    VRM_USE_GLTFSHADER = 'VRM_USE_GLTFSHADER',\r\n    VRMMToon = 'VRM/MToon',\r\n    VRMUnlitTransparentZWrite = 'VRM/UnlitTransparentZWrite',\r\n}\r\n\r\nexport interface IVRMMaterialPropertyFloatProperties {\r\n    _Cutoff?: number;\r\n    _BumpScale?: number;\r\n    _ReceiveShadowRate?: number;\r\n    _ShadingGradeRate?: number;\r\n    _ShadeShift?: number;\r\n    _ShadeToony?: number;\r\n    _LightColorAttenuation?: number;\r\n    _IndirectLightIntensity?: number;\r\n    _RimLightingMix?: number;\r\n    _RimFresnelPower?: number;\r\n    _RimLift?: number;\r\n    _OutlineWidth?: number;\r\n    _OutlineScaledMaxDistance?: number;\r\n    _OutlineLightingMix?: number;\r\n    _UvAnimScrollX?: number;\r\n    _UvAnimScrollY?: number;\r\n    _UvAnimRotation?: number;\r\n    _DebugMode?: number;\r\n    _BlendMode?: number;\r\n    _OutlineWidthMode?: number;\r\n    _OutlineColorMode?: number;\r\n    _CullMode?: number;\r\n    _OutlineCullMode?: number;\r\n    _SrcBlend?: number;\r\n    _DstBlend?: number;\r\n    _ZWrite?: number;\r\n    [prop: string]: number | undefined;\r\n}\r\n\r\nexport type IVRMVectorMaterialProperty = [number, number, number, number];\r\n\r\nexport interface IVRMMaterialPropertyVectorProperties {\r\n    _Color?: IVRMVectorMaterialProperty;\r\n    _ShadeColor?: IVRMVectorMaterialProperty;\r\n    _MainTex?: IVRMVectorMaterialProperty;\r\n    _ShadeTexture?: IVRMVectorMaterialProperty;\r\n    _BumpMap?: IVRMVectorMaterialProperty;\r\n    _ReceiveShadowTexture?: IVRMVectorMaterialProperty;\r\n    _ShadingGradeTexture?: IVRMVectorMaterialProperty;\r\n    _RimColor?: IVRMVectorMaterialProperty;\r\n    _RimTexture?: IVRMVectorMaterialProperty;\r\n    _SphereAdd?: IVRMVectorMaterialProperty;\r\n    _EmissionColor?: IVRMVectorMaterialProperty;\r\n    _EmissionMap?: IVRMVectorMaterialProperty;\r\n    _OutlineWidthTexture?: IVRMVectorMaterialProperty;\r\n    _OutlineColor?: IVRMVectorMaterialProperty;\r\n    _UvAnimMaskTexture?: IVRMVectorMaterialProperty;\r\n    [prop: string]: IVRMVectorMaterialProperty | undefined;\r\n}\r\n\r\nexport interface IVRMMaterialPropertyTextureProperties {\r\n    _MainTex?: number;\r\n    _ShadeTexture?: number;\r\n    _BumpMap?: number;\r\n    _ReceiveShadowTexture?: number;\r\n    _ShadingGradeTexture?: number;\r\n    _RimTexture?: number;\r\n    _SphereAdd?: number;\r\n    _EmissionMap?: number;\r\n    _OutlineWidthTexture?: number;\r\n    _UvAnimMaskTexture?: number;\r\n    [prop: string]: number | undefined;\r\n}\r\n\r\nexport interface IVRMMaterialPropertyKeywordMap {\r\n    _NORMALMAP?: boolean;\r\n    _ALPHATEST_ON?: boolean;\r\n    _ALPHABLEND_ON?: boolean;\r\n    _ALPHAPREMULTIPLY_ON?: boolean;\r\n}\r\n\r\nexport interface IVRMMaterialPropertyTagMap {\r\n    RenderType?: 'Opaque' | 'TransparentCutout' | 'Transparent';\r\n}\r\n\r\n/**\r\n * extensions.VRM.materialProperties\r\n */\r\nexport interface IVRMMaterialProperty {\r\n    name: string;\r\n    shader: IVRMMaterialPropertyShader;\r\n    renderQueue: number;\r\n    floatProperties: IVRMMaterialPropertyFloatProperties;\r\n    vectorProperties: IVRMMaterialPropertyVectorProperties;\r\n    textureProperties: IVRMMaterialPropertyTextureProperties;\r\n    keywordMap: IVRMMaterialPropertyKeywordMap;\r\n    tagMap: IVRMMaterialPropertyTagMap;\r\n}\r\n","import { Vector3 } from '@babylonjs/core/Maths/math';\r\nimport type { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport type { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\nimport type { MorphTarget } from '@babylonjs/core/Morph/morphTarget';\r\nimport type { Scene } from '@babylonjs/core/scene';\r\nimport type { Nullable } from '@babylonjs/core/types';\r\nimport { SpringBoneController } from './secondary-animation/spring-bone-controller';\r\nimport { HumanoidBone } from './humanoid-bone';\r\nimport type { IVRM } from './vrm-interfaces';\r\nimport { MaterialValueBindingMerger } from './material-value-binding-merger';\r\n\r\ninterface IsBinaryMap {\r\n    [morphName: string]: boolean;\r\n}\r\n\r\ninterface MorphTargetSetting {\r\n    target: MorphTarget;\r\n    weight: number;\r\n}\r\n\r\ninterface MorphTargetMap {\r\n    [morphName: string]: MorphTargetSetting[];\r\n}\r\n\r\ninterface MaterialValueBindingMergerMap {\r\n    [morphName: string]: MaterialValueBindingMerger;\r\n}\r\n\r\ninterface TransformNodeMap {\r\n    [humanBoneName: string]: TransformNode;\r\n}\r\n\r\ninterface TransformNodeCache {\r\n    [nodeIndex: number]: TransformNode;\r\n}\r\n\r\ninterface MeshCache {\r\n    [meshIndex: number]: Mesh[];\r\n}\r\n\r\n/**\r\n * Unity Humanoid Bone 名\r\n */\r\nexport type HumanBoneName =\r\n    | 'hips'\r\n    | 'leftUpperLeg'\r\n    | 'rightUpperLeg'\r\n    | 'leftLowerLeg'\r\n    | 'rightLowerLeg'\r\n    | 'leftFoot'\r\n    | 'rightFoot'\r\n    | 'spine'\r\n    | 'chest'\r\n    | 'neck'\r\n    | 'head'\r\n    | 'leftShoulder'\r\n    | 'rightShoulder'\r\n    | 'leftUpperArm'\r\n    | 'rightUpperArm'\r\n    | 'leftLowerArm'\r\n    | 'rightLowerArm'\r\n    | 'leftHand'\r\n    | 'rightHand'\r\n    | 'leftToes'\r\n    | 'rightToes'\r\n    | 'leftEye'\r\n    | 'rightEye'\r\n    | 'jaw'\r\n    | 'leftThumbProximal'\r\n    | 'leftThumbIntermediate'\r\n    | 'leftThumbDistal'\r\n    | 'leftIndexProximal'\r\n    | 'leftIndexIntermediate'\r\n    | 'leftIndexDistal'\r\n    | 'leftMiddleProximal'\r\n    | 'leftMiddleIntermediate'\r\n    | 'leftMiddleDistal'\r\n    | 'leftRingProximal'\r\n    | 'leftRingIntermediate'\r\n    | 'leftRingDistal'\r\n    | 'leftLittleProximal'\r\n    | 'leftLittleIntermediate'\r\n    | 'leftLittleDistal'\r\n    | 'rightThumbProximal'\r\n    | 'rightThumbIntermediate'\r\n    | 'rightThumbDistal'\r\n    | 'rightIndexProximal'\r\n    | 'rightIndexIntermediate'\r\n    | 'rightIndexDistal'\r\n    | 'rightMiddleProximal'\r\n    | 'rightMiddleIntermediate'\r\n    | 'rightMiddleDistal'\r\n    | 'rightRingProximal'\r\n    | 'rightRingIntermediate'\r\n    | 'rightRingDistal'\r\n    | 'rightLittleProximal'\r\n    | 'rightLittleIntermediate'\r\n    | 'rightLittleDistal'\r\n    | 'upperChest'\r\n    | string;\r\n\r\n/**\r\n * VRM キャラクターを動作させるためのマネージャ\r\n */\r\nexport class VRMManager {\r\n    private isBinaryMorphMap: IsBinaryMap = {};\r\n    private morphTargetMap: MorphTargetMap = {};\r\n    private materialValueBindingMergerMap: MaterialValueBindingMergerMap = {};\r\n    private presetMorphTargetMap: MorphTargetMap = {};\r\n    private transformNodeMap: TransformNodeMap = {};\r\n    private transformNodeCache: TransformNodeCache = {};\r\n    private meshCache: MeshCache = {};\r\n    private _humanoidBone: HumanoidBone;\r\n    private _rootMesh: Mesh;\r\n\r\n    /**\r\n     * Secondary Animation として定義されている VRM Spring Bone のコントローラ\r\n     */\r\n    public readonly springBoneController: SpringBoneController;\r\n\r\n    /**\r\n     *\r\n     * @param ext glTF.extensions.VRM の中身 json\r\n     * @param scene\r\n     * @param meshesFrom この番号以降のメッシュがこの VRM に該当する\r\n     * @param transformNodesFrom この番号以降の TransformNode がこの VRM に該当する\r\n     * @param materialsNodesFrom この番号以降の Material がこの VRM に該当する\r\n     */\r\n    public constructor(\r\n        public readonly ext: IVRM,\r\n        public readonly scene: Scene,\r\n        private readonly meshesFrom: number,\r\n        private readonly transformNodesFrom: number,\r\n        private readonly materialsNodesFrom: number\r\n    ) {\r\n        this.meshCache = this.constructMeshCache();\r\n        this.transformNodeCache = this.constructTransformNodeCache();\r\n        this.springBoneController = new SpringBoneController(this.ext.secondaryAnimation, this.findTransformNode.bind(this));\r\n\r\n        if (this.ext.blendShapeMaster && this.ext.blendShapeMaster.blendShapeGroups) {\r\n            this.constructIsBinaryMap();\r\n            this.constructMorphTargetMap();\r\n            this.constructMaterialValueBindingMergerMap();\r\n        }\r\n        this.constructTransformNodeMap();\r\n\r\n        this._humanoidBone = new HumanoidBone(this.transformNodeMap);\r\n    }\r\n\r\n    /**\r\n     * Secondary Animation を更新する\r\n     *\r\n     * @param deltaTime 前フレームからの経過秒数(sec)\r\n     */\r\n    public async update(deltaTime: number): Promise<void> {\r\n        await this.springBoneController.update(deltaTime);\r\n    }\r\n\r\n    /**\r\n     * 破棄処理\r\n     */\r\n    public dispose(): void {\r\n        this.springBoneController.dispose();\r\n        this._humanoidBone.dispose();\r\n\r\n        (this.morphTargetMap as any) = null;\r\n        (this.materialValueBindingMergerMap as any) = null;\r\n        (this.presetMorphTargetMap as any) = null;\r\n        (this.transformNodeMap as any) = null;\r\n        (this.transformNodeCache as any) = null;\r\n        (this.meshCache as any) = null;\r\n        (this._rootMesh as any) = null;\r\n    }\r\n\r\n    /**\r\n     * モーフィングを行う\r\n     * @param label モーフ名\r\n     * @param value 値(0〜1)\r\n     */\r\n    public morphing(label: string, value: number): void {\r\n        const v = this.calcMorphValue(label, value);\r\n        if (this.morphTargetMap[label]) {\r\n            this.morphTargetMap[label].forEach((setting) => {\r\n                setting.target.influence = v * (setting.weight / 100);\r\n            });\r\n        }\r\n        if (this.materialValueBindingMergerMap[label]) {\r\n            this.materialValueBindingMergerMap[label].morphing(v);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * プリセットモーフのモーフィングを行う\r\n     * @param label モーフ名\r\n     * @param value 値(0〜1)\r\n     */\r\n    public morphingPreset(label: string, value: number): void {\r\n        if (!this.presetMorphTargetMap[label]) {\r\n            return;\r\n        }\r\n        const v = this.calcMorphValue(label, value);\r\n        this.presetMorphTargetMap[label].forEach((setting) => {\r\n            setting.target.influence = v * (setting.weight / 100);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * モーフィング用の値を計算する\r\n     * @param label モーフ名\r\n     * @param value 値\r\n     */\r\n    private calcMorphValue(label: string, value: number): number {\r\n        const v = Math.max(0.0, Math.min(1.0, value));\r\n        if (this.isBinaryMorphMap[label]) {\r\n            return v > 0.5 ? 1.0 : 0.0;\r\n        }\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * list morphing name\r\n     */\r\n    public getMorphingList(): string[] {\r\n        return Object.keys(this.morphTargetMap);\r\n    }\r\n\r\n    /**\r\n     * 一人称時のカメラ位置を絶対座標として取得する\r\n     *\r\n     * firstPersonBone が未設定の場合は null を返す\r\n     *\r\n     * @returns 一人称時のカメラの現在における絶対座標\r\n     */\r\n    public getFirstPersonCameraPosition(): Nullable<Vector3> {\r\n        const firstPersonBone = this.getFirstPersonBone();\r\n        if (!firstPersonBone) {\r\n            return null;\r\n        }\r\n\r\n        const basePos = firstPersonBone.getAbsolutePosition();\r\n        const offsetPos = this.ext.firstPerson.firstPersonBoneOffset;\r\n        return new Vector3(basePos.x + offsetPos.x, basePos.y + offsetPos.y, basePos.z + offsetPos.z);\r\n    }\r\n\r\n    /**\r\n     * 一人称時に頭とみなす TransformNode を取得する\r\n     */\r\n    public getFirstPersonBone(): Nullable<TransformNode> {\r\n        return this.findTransformNode(this.ext.firstPerson.firstPersonBone);\r\n    }\r\n\r\n    /**\r\n     * ボーン名からそのボーンに該当する TransformNode を取得する\r\n     *\r\n     * @param name HumanBoneName\r\n     * @deprecated Use humanoidBone getter instead. This method will delete at v2.\r\n     */\r\n    public getBone(name: HumanBoneName): Nullable<TransformNode> {\r\n        return this.transformNodeMap[name] || null;\r\n    }\r\n\r\n    /**\r\n     * Get HumanoidBone Methods\r\n     */\r\n    public get humanoidBone(): HumanoidBone {\r\n        return this._humanoidBone;\r\n    }\r\n\r\n    /**\r\n     * VRM Root mesh\r\n     *\r\n     * Useful for Model Transformation\r\n     */\r\n    public get rootMesh(): Mesh {\r\n        return this._rootMesh;\r\n    }\r\n\r\n    /**\r\n     * node 番号から該当する TransformNode を探す\r\n     * 数が多くなるのでキャッシュに参照を持つ構造にする\r\n     * gltf の node 番号は `metadata.gltf.pointers` に記録されている\r\n     * @param nodeIndex\r\n     */\r\n    public findTransformNode(nodeIndex: number): Nullable<TransformNode> {\r\n        return this.transformNodeCache[nodeIndex] || null;\r\n    }\r\n\r\n    /**\r\n     * mesh 番号からメッシュを探す\r\n     * gltf の mesh 番号は `metadata.gltf.pointers` に記録されている\r\n     * @deprecated Use findMeshes instead. This method has broken.\r\n     */\r\n    public findMesh(meshIndex: number): Nullable<Mesh> {\r\n        return (this.meshCache[meshIndex] && this.meshCache[meshIndex][0]) || null;\r\n    }\r\n\r\n    /**\r\n     * mesh 番号からメッシュを探す\r\n     * gltf の mesh 番号は `metadata.gltf.pointers` に記録されている\r\n     */\r\n    public findMeshes(meshIndex: number): Nullable<Mesh[]> {\r\n        return this.meshCache[meshIndex] || null;\r\n    }\r\n\r\n    /**\r\n     * 事前に MorphTarget と isBinary を紐付ける\r\n     */\r\n    private constructIsBinaryMap(): void {\r\n        this.ext.blendShapeMaster.blendShapeGroups.forEach((g) => {\r\n            this.isBinaryMorphMap[g.name] = g.isBinary;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 事前に MorphTarget と BlendShape を紐付ける\r\n     */\r\n    private constructMorphTargetMap(): void {\r\n        this.ext.blendShapeMaster.blendShapeGroups.forEach((g) => {\r\n            if (!g.binds) {\r\n                return;\r\n            }\r\n            g.binds.forEach((b) => {\r\n                const meshes = this.findMeshes(b.mesh);\r\n                if (!meshes) {\r\n                    console.log(`Undefined BlendShapeBind Mesh`, b);\r\n                    return;\r\n                }\r\n                meshes.forEach((mesh) => {\r\n                    const morphTargetManager = mesh.morphTargetManager;\r\n                    if (!morphTargetManager) {\r\n                        console.log(`Undefined morphTargetManager`, b);\r\n                        return;\r\n                    }\r\n                    const target = morphTargetManager.getTarget(b.index);\r\n                    this.morphTargetMap[g.name] = this.morphTargetMap[g.name] || [];\r\n                    this.morphTargetMap[g.name].push({\r\n                        target,\r\n                        weight: b.weight,\r\n                    });\r\n                    if (g.presetName) {\r\n                        this.presetMorphTargetMap[g.presetName] = this.presetMorphTargetMap[g.presetName] || [];\r\n                        this.presetMorphTargetMap[g.presetName].push({\r\n                            target,\r\n                            weight: b.weight,\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 事前に MaterialValueBindingMerger とモーフ名を紐付ける\r\n     */\r\n    private constructMaterialValueBindingMergerMap() {\r\n        const materials = this.scene.materials.slice(this.materialsNodesFrom);\r\n        this.ext.blendShapeMaster.blendShapeGroups.forEach((g) => {\r\n            if (!g.materialValues) {\r\n                return;\r\n            }\r\n            this.materialValueBindingMergerMap[g.name] = new MaterialValueBindingMerger(materials, g.materialValues);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 事前に TransformNode と bone 名を紐づける\r\n     */\r\n    private constructTransformNodeMap() {\r\n        this.ext.humanoid.humanBones.forEach((b) => {\r\n            const node = this.findTransformNode(b.node);\r\n            if (!node) {\r\n                return;\r\n            }\r\n            this.transformNodeMap[b.bone] = node;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * node 番号と TransformNode を紐づける\r\n     */\r\n    private constructTransformNodeCache() {\r\n        const cache: TransformNodeCache = {};\r\n        for (let index = this.transformNodesFrom; index < this.scene.transformNodes.length; index++) {\r\n            const node = this.scene.transformNodes[index];\r\n            // ポインタが登録されていないものは省略\r\n            if (!node || !node.metadata || !node.metadata.gltf || !node.metadata.gltf.pointers || node.metadata.gltf.pointers.length === 0) {\r\n                continue;\r\n            }\r\n            for (const pointer of node.metadata.gltf.pointers) {\r\n                if (pointer.startsWith('/nodes/')) {\r\n                    const nodeIndex = parseInt((pointer as string).substr(7), 10);\r\n                    cache[nodeIndex] = node;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cache;\r\n    }\r\n\r\n    /**\r\n     * mesh 番号と Mesh を紐づける\r\n     */\r\n    private constructMeshCache() {\r\n        const cache: MeshCache = {};\r\n        for (let index = this.meshesFrom; index < this.scene.meshes.length; index++) {\r\n            const mesh = this.scene.meshes[index];\r\n            if (mesh.id === '__root__') {\r\n                this._rootMesh = mesh as Mesh;\r\n                continue;\r\n            }\r\n            // ポインタが登録されていないものは省略\r\n            if (!mesh || !mesh.metadata || !mesh.metadata.gltf || !mesh.metadata.gltf.pointers || mesh.metadata.gltf.pointers.length === 0) {\r\n                continue;\r\n            }\r\n            for (const pointer of mesh.metadata.gltf.pointers) {\r\n                const match = (pointer as string).match(/^\\/meshes\\/(\\d+).+$/);\r\n                if (match) {\r\n                    const nodeIndex = parseInt(match[1], 10);\r\n                    cache[nodeIndex] = cache[nodeIndex] || [];\r\n                    cache[nodeIndex].push(mesh as Mesh);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cache;\r\n    }\r\n}\r\n","import type { Material } from '@babylonjs/core/Materials/material';\r\nimport type { BaseTexture } from '@babylonjs/core/Materials/Textures/baseTexture';\r\nimport type { Texture } from '@babylonjs/core/Materials/Textures/texture';\r\nimport { Color3 } from '@babylonjs/core/Maths/math';\r\nimport type { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport type { Nullable } from '@babylonjs/core/types';\r\nimport type { GLTFLoader, IMaterial } from '@babylonjs/loaders/glTF/2.0';\r\nimport { MToonMaterial } from 'babylon-mtoon-material';\r\nimport type { IVRMMaterialProperty, IVRMVectorMaterialProperty } from './vrm-interfaces';\r\nimport { IVRMMaterialPropertyShader } from './vrm-interfaces';\r\nimport { Engine } from '@babylonjs/core/Engines/engine';\r\n\r\n/**\r\n * VRM で指定される Material を生成する\r\n * [VRM が提供するシェーダ](https://vrm.dev/en/univrm/shaders/index.html) を特定し読み込む\r\n * - UnlitTexture: 不透明, VRM ファイル側で [KHR_materials_unlit](https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_unlit) が定義されているため、何もしない\r\n * - UnlitCutout: 透明度が閾値以下の部分を透明とする, 同上\r\n * - UnlitTransparent: アルファブレンド。ZWriteしない, 同上\r\n * - UnlitTransparentZWrite: アルファブレンド。ZWriteする, 同上に加え、プロパティで ZWrite を強制しています\r\n * - MToon: MToonMaterial を差し替えています。\r\n */\r\nexport class VRMMaterialGenerator {\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public constructor(private readonly loader: GLTFLoader) {}\r\n\r\n    /**\r\n     * マテリアルを生成する Promise を返す\r\n     * VRM 対象外の場合は null\r\n     */\r\n    public generate(context: string, material: IMaterial, mesh: Mesh, babylonDrawMode: number, assign: (babylonMaterial: Material) => void): Nullable<Promise<Material>> {\r\n        const materialProp = this.findMaterialPropertyByName(material.name, this.getMaterialProperties());\r\n        if (!materialProp) {\r\n            return null;\r\n        }\r\n        mesh.alphaIndex = materialProp.renderQueue;\r\n        const newMaterial = this.createMaterialByShader(context, material, babylonDrawMode, materialProp);\r\n        if (!newMaterial) {\r\n            return null;\r\n        }\r\n        assign(newMaterial);\r\n        if (newMaterial instanceof MToonMaterial) {\r\n            return this.loadMToonTexturesAsync(context, newMaterial, materialProp);\r\n        }\r\n        return Promise.resolve(newMaterial);\r\n    }\r\n\r\n    /**\r\n     * VRM または VCI からマテリアルプロパティの配列を探す\r\n     */\r\n    private getMaterialProperties(): IVRMMaterialProperty[] {\r\n        if (!this.loader.gltf.extensions) {\r\n            return [];\r\n        }\r\n        if (this.loader.gltf.extensions.VRM && this.loader.gltf.extensions.VRM.materialProperties) {\r\n            return this.loader.gltf.extensions.VRM.materialProperties;\r\n        }\r\n        if (this.loader.gltf.extensions.VCAST_vci_material_unity && this.loader.gltf.extensions.VCAST_vci_material_unity.materials) {\r\n            return this.loader.gltf.extensions.VCAST_vci_material_unity.materials;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * マテリアル名から MaterialProperty を探す\r\n     * @param materialName マテリアル名\r\n     * @param extension 拡張データ\r\n     */\r\n    private findMaterialPropertyByName(materialName: string | undefined, materials: IVRMMaterialProperty[]): Nullable<IVRMMaterialProperty> {\r\n        if (!materialName || !materials) {\r\n            return null;\r\n        }\r\n        const mats = materials.filter((v) => v.name === materialName);\r\n        if (mats.length === 0) {\r\n            return null;\r\n        } else if (mats.length >= 2) {\r\n            this.loader.log(`Duplicated vrm material name found: ${materialName}`);\r\n        }\r\n        return mats[mats.length - 1];\r\n    }\r\n\r\n    /**\r\n     * テクスチャを読み込む\r\n     * @param context 現在のコンテキスト\r\n     * @param material 生成した MToonMaterial\r\n     * @param prop 生成した MToonMaterial のマテリアルプロパティ\r\n     */\r\n    private loadMToonTexturesAsync(context: string, material: MToonMaterial, prop: IVRMMaterialProperty): Promise<Material> {\r\n        const promises: Array<Promise<BaseTexture>> = [];\r\n        // 全てのテクスチャの UV Offset & Scale はメインテクスチャのものを流用する\r\n        const uvOffsetScale = prop.vectorProperties._MainTex;\r\n        if (!uvOffsetScale) {\r\n            return Promise.resolve(material);\r\n        }\r\n        const applyTexture = (index: number | undefined, callback: (texture: BaseTexture) => void) => {\r\n            applyPropertyWhenDefined<number>(index, (value) => {\r\n                promises.push(\r\n                    this.loader.loadTextureInfoAsync(`${context}/textures/${index}`, { index: value }, (babylonTexture: BaseTexture) => {\r\n                        // 実際は Texture インスタンスが来るのでキャスト\r\n                        const t = babylonTexture as Texture;\r\n                        t.uOffset = uvOffsetScale[0];\r\n                        t.vOffset = uvOffsetScale[1];\r\n                        t.uScale = uvOffsetScale[2];\r\n                        t.vScale = uvOffsetScale[3];\r\n                        callback(babylonTexture);\r\n                    })\r\n                );\r\n            });\r\n        };\r\n\r\n        applyTexture(prop.textureProperties._MainTex, (texture) => {\r\n            if (material.alphaBlend || material.alphaTest) {\r\n                texture.hasAlpha = true;\r\n            }\r\n            material.diffuseTexture = texture;\r\n        });\r\n        applyTexture(prop.textureProperties._ShadeTexture, (texture) => (material.shadeTexture = texture));\r\n        applyTexture(prop.textureProperties._BumpMap, (texture) => (material.bumpTexture = texture));\r\n        applyTexture(prop.textureProperties._ReceiveShadowTexture, (texture) => (material.receiveShadowTexture = texture));\r\n        applyTexture(prop.textureProperties._ShadingGradeTexture, (texture) => (material.shadingGradeTexture = texture));\r\n        applyTexture(prop.textureProperties._RimTexture, (texture) => (material.rimTexture = texture));\r\n        applyTexture(prop.textureProperties._SphereAdd, (texture) => (material.matCapTexture = texture));\r\n        applyTexture(prop.textureProperties._EmissionMap, (texture) => (material.emissiveTexture = texture));\r\n        applyTexture(prop.textureProperties._OutlineWidthTexture, (texture) => (material.outlineWidthTexture = texture));\r\n        applyTexture(prop.textureProperties._UvAnimMaskTexture, (texture) => (material.uvAnimationMaskTexture = texture));\r\n\r\n        return Promise.all(promises).then(() => material);\r\n    }\r\n\r\n    /**\r\n     * シェーダ名からマテリアルを推測して生成する\r\n     * @param context 現在のコンテキスト\r\n     * @param material glTF マテリアル\r\n     * @param babylonDrawMode 描画種類\r\n     * @param prop 生成するマテリアルプロパティ\r\n     */\r\n    private createMaterialByShader(context: string, material: IMaterial, babylonDrawMode: number, prop: IVRMMaterialProperty): Nullable<Material> {\r\n        if (prop.shader === IVRMMaterialPropertyShader.VRMMToon) {\r\n            const mtoonMaterial = new MToonMaterial(material.name || `MToonMaterial${material.index}`, this.loader.babylonScene);\r\n            this.setMToonMaterialProperties(mtoonMaterial, prop);\r\n            return mtoonMaterial;\r\n        }\r\n        if (prop.shader === IVRMMaterialPropertyShader.VRMUnlitTransparentZWrite) {\r\n            const mat = this.loader.createMaterial(context, material, babylonDrawMode);\r\n            // 通常マテリアルに Depth Write を強制\r\n            mat.disableDepthWrite = false;\r\n            mat.forceDepthWrite = true;\r\n            return mat;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * マテリアルに VRM プロパティを設定\r\n     * VRM プロパティとマテリアルプロパティのマッピングを行っている\r\n     * 初期値はマテリアル実装側に持っているため、値がある場合のみ上書きする\r\n     */\r\n    private setMToonMaterialProperties(material: MToonMaterial, prop: IVRMMaterialProperty) {\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._Cutoff, (value) => (material.alphaCutOff = value));\r\n        applyPropertyWhenDefined<IVRMVectorMaterialProperty>(prop.vectorProperties._Color, (value) => {\r\n            material.diffuseColor = new Color3(value[0], value[1], value[2]);\r\n            material.alpha = value[3];\r\n        });\r\n        applyPropertyWhenDefined<IVRMVectorMaterialProperty>(prop.vectorProperties._ShadeColor, (value) => {\r\n            material.shadeColor = new Color3(value[0], value[1], value[2]);\r\n        });\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._BumpScale, (value) => (material.bumpScale = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._ReceiveShadowRate, (value) => (material.receiveShadowRate = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._ShadingGradeRate, (value) => (material.shadingGradeRate = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._ShadeShift, (value) => (material.shadeShift = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._ShadeToony, (value) => (material.shadeToony = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._LightColorAttenuation, (value) => (material.lightColorAttenuation = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._IndirectLightIntensity, (value) => (material.indirectLightIntensity = value));\r\n        applyPropertyWhenDefined<IVRMVectorMaterialProperty>(prop.vectorProperties._RimColor, (value) => {\r\n            material.rimColor = new Color3(value[0], value[1], value[2]);\r\n        });\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._RimLightingMix, (value) => (material.rimLightingMix = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._RimFresnelPower, (value) => (material.rimFresnelPower = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._RimLift, (value) => (material.rimLift = value));\r\n        applyPropertyWhenDefined<IVRMVectorMaterialProperty>(prop.vectorProperties._EmissionColor, (value) => {\r\n            material.emissiveColor = new Color3(value[0], value[1], value[2]);\r\n        });\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._OutlineWidth, (value) => (material.outlineWidth = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._OutlineScaledMaxDistance, (value) => (material.outlineScaledMaxDistance = value));\r\n        applyPropertyWhenDefined<IVRMVectorMaterialProperty>(prop.vectorProperties._OutlineColor, (value) => {\r\n            material.outlineColor = new Color3(value[0], value[1], value[2]);\r\n        });\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._OutlineLightingMix, (value) => (material.outlineLightingMix = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._UvAnimScrollX, (value) => (material.uvAnimationScrollX = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._UvAnimScrollY, (value) => (material.uvAnimationScrollY = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._UvAnimRotation, (value) => (material.uvAnimationRotation = value));\r\n\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._DebugMode, (value) => (material.debugMode = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._BlendMode, (value) => {\r\n            switch (value) {\r\n                case 0: // Opaque\r\n                    material.alphaBlend = false;\r\n                    material.alphaTest = false;\r\n                    break;\r\n                case 1: // TransparentCutout\r\n                    material.alphaBlend = false;\r\n                    material.alphaTest = true;\r\n                    material.alphaMode = Engine.ALPHA_COMBINE;\r\n                    break;\r\n                case 2: // Transparent\r\n                    material.alphaBlend = true;\r\n                    material.alphaTest = false;\r\n                    material.alphaMode = Engine.ALPHA_COMBINE;\r\n                    break;\r\n            }\r\n        });\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._OutlineWidthMode, (value) => (material.outlineWidthMode = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._OutlineColorMode, (value) => (material.outlineColorMode = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._CullMode, (value) => (material.cullMode = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._OutlineCullMode, (value) => (material.outlineCullMode = value));\r\n        applyPropertyWhenDefined<boolean>(prop.keywordMap._ALPHABLEND_ON, (value) => (material.alphaBlend = value));\r\n        applyPropertyWhenDefined<boolean>(prop.keywordMap._ALPHATEST_ON, (value) => (material.alphaTest = value));\r\n        applyPropertyWhenDefined<number>(prop.floatProperties._ZWrite, (value) => {\r\n            material.forceDepthWrite = Math.round(value) === 1;\r\n            if (material.forceDepthWrite) {\r\n                material.disableDepthWrite = false;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * プロパティが設定されていればコールバックを実行する\r\n */\r\nfunction applyPropertyWhenDefined<T>(prop: T | undefined, callback: (value: T) => void) {\r\n    if (typeof prop === 'undefined') {\r\n        return;\r\n    }\r\n    callback(prop);\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbabylon_vrm_loader\"] = self[\"webpackChunkbabylon_vrm_loader\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors~main\"], () => (__webpack_require__(\"./src/test/index.ts\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}